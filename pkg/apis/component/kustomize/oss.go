/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kustomize

import (
	"encoding/json"

	"github.com/chivalryq/vela-go-sdk/pkg/apis/utils"
)

// checks if the Oss type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Oss{}

// Oss struct for Oss
type Oss struct {
	// The bucket's name, required if repoType is oss
	BucketName *string `json:"bucketName,omitempty"`
	// \"generic\" for Minio, Amazon S3, Google Cloud Storage, Alibaba Cloud OSS, \"aws\" for retrieve credentials from the EC2 service when credentials not specified, default \"generic\"
	Provider *string `json:"provider,omitempty"`
	// The bucket region, optional
	Region *string `json:"region,omitempty"`
}

// NewOssWith instantiates a new Oss object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOssWith() *Oss {
	this := Oss{}
	var provider string = "generic"
	this.Provider = &provider
	return &this
}

// NewOss instantiates a new Oss object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOss() *Oss {
	this := Oss{}
	var provider string = "generic"
	this.Provider = &provider
	return &this
}

// NewOsss converts a list Oss pointers to objects.
// This is helpful when the SetOss requires a list of objects
func NewOsss(ps ...*Oss) []Oss {
	objs := []Oss{}
	for _, p := range ps {
		objs = append(objs, *p)
	}
	return objs
}

// GetBucketName returns the BucketName field value if set, zero value otherwise.
func (o *Oss) GetBucketName() string {
	if o == nil || utils.IsNil(o.BucketName) {
		var ret string
		return ret
	}
	return *o.BucketName
}

// GetBucketNameOk returns a tuple with the BucketName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Oss) GetBucketNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.BucketName) {
		return nil, false
	}
	return o.BucketName, true
}

// HasBucketName returns a boolean if a field has been set.
func (o *Oss) HasBucketName() bool {
	if o != nil && !utils.IsNil(o.BucketName) {
		return true
	}

	return false
}

// SetBucketName gets a reference to the given string and assigns it to the bucketName field.
// BucketName:  The bucket's name, required if repoType is oss
func (o *Oss) SetBucketName(v string) *Oss {
	o.BucketName = &v
	return o
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *Oss) GetProvider() string {
	if o == nil || utils.IsNil(o.Provider) {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Oss) GetProviderOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *Oss) HasProvider() bool {
	if o != nil && !utils.IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the provider field.
// Provider:  \"generic\" for Minio, Amazon S3, Google Cloud Storage, Alibaba Cloud OSS, \"aws\" for retrieve credentials from the EC2 service when credentials not specified, default \"generic\"
func (o *Oss) SetProvider(v string) *Oss {
	o.Provider = &v
	return o
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *Oss) GetRegion() string {
	if o == nil || utils.IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Oss) GetRegionOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *Oss) HasRegion() bool {
	if o != nil && !utils.IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the region field.
// Region:  The bucket region, optional
func (o *Oss) SetRegion(v string) *Oss {
	o.Region = &v
	return o
}

func (o Oss) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Oss) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.BucketName) {
		toSerialize["bucketName"] = o.BucketName
	}
	if !utils.IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !utils.IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	return toSerialize, nil
}

type NullableOss struct {
	value *Oss
	isSet bool
}

func (v NullableOss) Get() *Oss {
	return v.value
}

func (v *NullableOss) Set(val *Oss) {
	v.value = val
	v.isSet = true
}

func (v NullableOss) IsSet() bool {
	return v.isSet
}

func (v *NullableOss) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOss(val *Oss) *NullableOss {
	return &NullableOss{value: val, isSet: true}
}

func (v NullableOss) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOss) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

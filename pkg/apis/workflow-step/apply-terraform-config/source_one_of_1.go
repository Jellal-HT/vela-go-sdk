/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apply_terraform_config

import (
	"encoding/json"

	"vela-go-sdk/pkg/apis/utils"
)

// checks if the SourceOneOf1 type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &SourceOneOf1{}

// SourceOneOf1 struct for SourceOneOf1
type SourceOneOf1 struct {
	// specify the path of the terraform configuration
	path *string `json:"path,omitempty"`
	// specify the remote url of the terraform configuration
	remote string `json:"remote"`
}

// NewSourceOneOf1With instantiates a new SourceOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceOneOf1With(remote string) *SourceOneOf1 {
	this := SourceOneOf1{}
	this.remote = remote
	return &this
}

// NewSourceOneOf1 instantiates a new SourceOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceOneOf1() *SourceOneOf1 {
	this := SourceOneOf1{}
	var remote string = "https://github.com/kubevela-contrib/terraform-modules.git"
	this.remote = remote
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *SourceOneOf1) GetPath() string {
	if o == nil || utils.IsNil(o.path) {
		var ret string
		return ret
	}
	return *o.path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceOneOf1) GetPathOk() (*string, bool) {
	if o == nil || utils.IsNil(o.path) {
		return nil, false
	}
	return o.path, true
}

// HasPath returns a boolean if a field has been set.
func (o *SourceOneOf1) HasPath() bool {
	if o != nil && !utils.IsNil(o.path) {
		return true
	}

	return false
}

// Path gets a reference to the given string and assigns it to the path field.
// path:  specify the path of the terraform configuration
func (o *SourceOneOf1) Path(v string) *SourceOneOf1 {
	o.path = &v
	return o
}

// GetRemote returns the Remote field value
func (o *SourceOneOf1) GetRemote() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.remote
}

// GetRemoteOk returns a tuple with the Remote field value
// and a boolean to check if the value has been set.
func (o *SourceOneOf1) GetRemoteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.remote, true
}

// Remote sets field value
func (o *SourceOneOf1) Remote(v string) *SourceOneOf1 {
	o.remote = v
	return o
}

func (o SourceOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SourceOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.path) {
		toSerialize["path"] = o.path
	}
	toSerialize["remote"] = o.remote
	return toSerialize, nil
}

type NullableSourceOneOf1 struct {
	value *SourceOneOf1
	isSet bool
}

func (v NullableSourceOneOf1) Get() *SourceOneOf1 {
	return v.value
}

func (v *NullableSourceOneOf1) Set(val *SourceOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceOneOf1(val *SourceOneOf1) *NullableSourceOneOf1 {
	return &NullableSourceOneOf1{value: val, isSet: true}
}

func (v NullableSourceOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apply_terraform_provider

import (
	"encoding/json"

	"github.com/chivalryq/vela-go-sdk/pkg/apis/utils"
)

// checks if the GCPProvider type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &GCPProvider{}

// GCPProvider struct for GCPProvider
type GCPProvider struct {
	Credentials *string `json:"credentials,omitempty"`
	Name        *string `json:"name,omitempty"`
	Project     *string `json:"project,omitempty"`
	Region      *string `json:"region,omitempty"`
	Type        *string `json:"type,omitempty"`
}

// NewGCPProviderWith instantiates a new GCPProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGCPProviderWith() *GCPProvider {
	this := GCPProvider{}
	var name string = "gcp-provider"
	this.Name = &name
	return &this
}

// NewGCPProvider instantiates a new GCPProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGCPProvider() *GCPProvider {
	this := GCPProvider{}
	var name string = "gcp-provider"
	this.Name = &name
	return &this
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *GCPProvider) GetCredentials() string {
	if o == nil || utils.IsNil(o.Credentials) {
		var ret string
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GCPProvider) GetCredentialsOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Credentials) {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *GCPProvider) HasCredentials() bool {
	if o != nil && !utils.IsNil(o.Credentials) {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given string and assigns it to the credentials field.
// Credentials:
func (o *GCPProvider) SetCredentials(v string) *GCPProvider {
	o.Credentials = &v
	return o
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GCPProvider) GetName() string {
	if o == nil || utils.IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GCPProvider) GetNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GCPProvider) HasName() bool {
	if o != nil && !utils.IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the name field.
// Name:
func (o *GCPProvider) SetName(v string) *GCPProvider {
	o.Name = &v
	return o
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *GCPProvider) GetProject() string {
	if o == nil || utils.IsNil(o.Project) {
		var ret string
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GCPProvider) GetProjectOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *GCPProvider) HasProject() bool {
	if o != nil && !utils.IsNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given string and assigns it to the project field.
// Project:
func (o *GCPProvider) SetProject(v string) *GCPProvider {
	o.Project = &v
	return o
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *GCPProvider) GetRegion() string {
	if o == nil || utils.IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GCPProvider) GetRegionOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *GCPProvider) HasRegion() bool {
	if o != nil && !utils.IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the region field.
// Region:
func (o *GCPProvider) SetRegion(v string) *GCPProvider {
	o.Region = &v
	return o
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GCPProvider) GetType() string {
	if o == nil || utils.IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GCPProvider) GetTypeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GCPProvider) HasType() bool {
	if o != nil && !utils.IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the type_ field.
// Type:
func (o *GCPProvider) SetType(v string) *GCPProvider {
	o.Type = &v
	return o
}

func (o GCPProvider) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GCPProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Credentials) {
		toSerialize["credentials"] = o.Credentials
	}
	if !utils.IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !utils.IsNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	if !utils.IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !utils.IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableGCPProvider struct {
	value *GCPProvider
	isSet bool
}

func (v NullableGCPProvider) Get() *GCPProvider {
	return v.value
}

func (v *NullableGCPProvider) Set(val *GCPProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableGCPProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableGCPProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGCPProvider(val *GCPProvider) *NullableGCPProvider {
	return &NullableGCPProvider{value: val, isSet: true}
}

func (v NullableGCPProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGCPProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

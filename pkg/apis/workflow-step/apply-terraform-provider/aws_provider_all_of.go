/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apply_terraform_provider

import (
	"encoding/json"

	"github.com/chivalryq/vela-go-sdk/pkg/apis/utils"
)

// checks if the AWSProviderAllOf type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &AWSProviderAllOf{}

// AWSProviderAllOf struct for AWSProviderAllOf
type AWSProviderAllOf struct {
	name  string `json:"name"`
	token string `json:"token"`
	type_ string `json:"type"`
}

// NewAWSProviderAllOfWith instantiates a new AWSProviderAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAWSProviderAllOfWith(name string, token string, type_ string) *AWSProviderAllOf {
	this := AWSProviderAllOf{}
	this.name = name
	this.token = token
	this.type_ = type_
	return &this
}

// NewAWSProviderAllOf instantiates a new AWSProviderAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSProviderAllOf() *AWSProviderAllOf {
	this := AWSProviderAllOf{}
	var name string = "aws-provider"
	this.name = name
	var token string = ""
	this.token = token
	return &this
}

// GetName returns the Name field value
func (o *AWSProviderAllOf) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AWSProviderAllOf) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.name, true
}

// Name sets field value
func (o *AWSProviderAllOf) Name(v string) *AWSProviderAllOf {
	o.name = v
	return o
}

// GetToken returns the Token field value
func (o *AWSProviderAllOf) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *AWSProviderAllOf) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.token, true
}

// Token sets field value
func (o *AWSProviderAllOf) Token(v string) *AWSProviderAllOf {
	o.token = v
	return o
}

// GetType returns the Type field value
func (o *AWSProviderAllOf) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.type_
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AWSProviderAllOf) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.type_, true
}

// Type sets field value
func (o *AWSProviderAllOf) Type(v string) *AWSProviderAllOf {
	o.type_ = v
	return o
}

func (o AWSProviderAllOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AWSProviderAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.name
	toSerialize["token"] = o.token
	toSerialize["type"] = o.type_
	return toSerialize, nil
}

type NullableAWSProviderAllOf struct {
	value *AWSProviderAllOf
	isSet bool
}

func (v NullableAWSProviderAllOf) Get() *AWSProviderAllOf {
	return v.value
}

func (v *NullableAWSProviderAllOf) Set(val *AWSProviderAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAWSProviderAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAWSProviderAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAWSProviderAllOf(val *AWSProviderAllOf) *NullableAWSProviderAllOf {
	return &NullableAWSProviderAllOf{value: val, isSet: true}
}

func (v NullableAWSProviderAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAWSProviderAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

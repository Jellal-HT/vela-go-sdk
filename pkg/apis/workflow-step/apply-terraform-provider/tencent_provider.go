/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apply_terraform_provider

import (
	"encoding/json"

	"github.com/chivalryq/vela-go-sdk/pkg/apis/utils"
)

// checks if the TencentProvider type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &TencentProvider{}

// TencentProvider struct for TencentProvider
type TencentProvider struct {
	Name      *string `json:"name,omitempty"`
	Region    *string `json:"region,omitempty"`
	SecretID  *string `json:"secretID,omitempty"`
	SecretKey *string `json:"secretKey,omitempty"`
	Type      *string `json:"type,omitempty"`
}

// NewTencentProviderWith instantiates a new TencentProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTencentProviderWith() *TencentProvider {
	this := TencentProvider{}
	var name string = "tencent-provider"
	this.Name = &name
	return &this
}

// NewTencentProvider instantiates a new TencentProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTencentProvider() *TencentProvider {
	this := TencentProvider{}
	var name string = "tencent-provider"
	this.Name = &name
	return &this
}

// NewTencentProviders converts a list TencentProvider pointers to objects.
// This is helpful when the SetTencentProvider requires a list of objects
func NewTencentProviders(ps ...*TencentProvider) []TencentProvider {
	objs := []TencentProvider{}
	for _, p := range ps {
		objs = append(objs, *p)
	}
	return objs
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TencentProvider) GetName() string {
	if o == nil || utils.IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TencentProvider) GetNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TencentProvider) HasName() bool {
	if o != nil && !utils.IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the name field.
// Name:
func (o *TencentProvider) SetName(v string) *TencentProvider {
	o.Name = &v
	return o
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *TencentProvider) GetRegion() string {
	if o == nil || utils.IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TencentProvider) GetRegionOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *TencentProvider) HasRegion() bool {
	if o != nil && !utils.IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the region field.
// Region:
func (o *TencentProvider) SetRegion(v string) *TencentProvider {
	o.Region = &v
	return o
}

// GetSecretID returns the SecretID field value if set, zero value otherwise.
func (o *TencentProvider) GetSecretID() string {
	if o == nil || utils.IsNil(o.SecretID) {
		var ret string
		return ret
	}
	return *o.SecretID
}

// GetSecretIDOk returns a tuple with the SecretID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TencentProvider) GetSecretIDOk() (*string, bool) {
	if o == nil || utils.IsNil(o.SecretID) {
		return nil, false
	}
	return o.SecretID, true
}

// HasSecretID returns a boolean if a field has been set.
func (o *TencentProvider) HasSecretID() bool {
	if o != nil && !utils.IsNil(o.SecretID) {
		return true
	}

	return false
}

// SetSecretID gets a reference to the given string and assigns it to the secretID field.
// SecretID:
func (o *TencentProvider) SetSecretID(v string) *TencentProvider {
	o.SecretID = &v
	return o
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *TencentProvider) GetSecretKey() string {
	if o == nil || utils.IsNil(o.SecretKey) {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TencentProvider) GetSecretKeyOk() (*string, bool) {
	if o == nil || utils.IsNil(o.SecretKey) {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *TencentProvider) HasSecretKey() bool {
	if o != nil && !utils.IsNil(o.SecretKey) {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the secretKey field.
// SecretKey:
func (o *TencentProvider) SetSecretKey(v string) *TencentProvider {
	o.SecretKey = &v
	return o
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TencentProvider) GetType() string {
	if o == nil || utils.IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TencentProvider) GetTypeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TencentProvider) HasType() bool {
	if o != nil && !utils.IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the type_ field.
// Type:
func (o *TencentProvider) SetType(v string) *TencentProvider {
	o.Type = &v
	return o
}

func (o TencentProvider) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TencentProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !utils.IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !utils.IsNil(o.SecretID) {
		toSerialize["secretID"] = o.SecretID
	}
	if !utils.IsNil(o.SecretKey) {
		toSerialize["secretKey"] = o.SecretKey
	}
	if !utils.IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableTencentProvider struct {
	value *TencentProvider
	isSet bool
}

func (v NullableTencentProvider) Get() *TencentProvider {
	return v.value
}

func (v *NullableTencentProvider) Set(val *TencentProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableTencentProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableTencentProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTencentProvider(val *TencentProvider) *NullableTencentProvider {
	return &NullableTencentProvider{value: val, isSet: true}
}

func (v NullableTencentProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTencentProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package export2secret

import (
	"encoding/json"
	"vela-go-sdk/pkg/apis/utils"
)

// checks if the DockerRegistry type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DockerRegistry{}

// DockerRegistry Specify the docker data
type DockerRegistry struct {
	// Specify the password of the docker registry
	password string `json:"password"`
	// Specify the server of the docker registry
	server string `json:"server"`
	// Specify the username of the docker registry
	username string `json:"username"`
}

// NewDockerRegistryWith instantiates a new DockerRegistry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDockerRegistryWith(password string, server string, username string) *DockerRegistry {
	this := DockerRegistry{}
	this.password = password
	this.server = server
	this.username = username
	return &this
}

// NewDockerRegistry instantiates a new DockerRegistry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDockerRegistry() *DockerRegistry {
	this := DockerRegistry{}
	var server string = "https://index.docker.io/v1/"
	this.server = server
	return &this
}

// GetPassword returns the Password field value
func (o *DockerRegistry) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *DockerRegistry) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.password, true
}

// Password sets field value
func (o *DockerRegistry) Password(v string) *DockerRegistry {
	o.password = v
	return o
}

// GetServer returns the Server field value
func (o *DockerRegistry) GetServer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.server
}

// GetServerOk returns a tuple with the Server field value
// and a boolean to check if the value has been set.
func (o *DockerRegistry) GetServerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.server, true
}

// Server sets field value
func (o *DockerRegistry) Server(v string) *DockerRegistry {
	o.server = v
	return o
}

// GetUsername returns the Username field value
func (o *DockerRegistry) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *DockerRegistry) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.username, true
}

// Username sets field value
func (o *DockerRegistry) Username(v string) *DockerRegistry {
	o.username = v
	return o
}

func (o DockerRegistry) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DockerRegistry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["password"] = o.password
	toSerialize["server"] = o.server
	toSerialize["username"] = o.username
	return toSerialize, nil
}

type NullableDockerRegistry struct {
	value *DockerRegistry
	isSet bool
}

func (v NullableDockerRegistry) Get() *DockerRegistry {
	return v.value
}

func (v *NullableDockerRegistry) Set(val *DockerRegistry) {
	v.value = val
	v.isSet = true
}

func (v NullableDockerRegistry) IsSet() bool {
	return v.isSet
}

func (v *NullableDockerRegistry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDockerRegistry(val *DockerRegistry) *NullableDockerRegistry {
	return &NullableDockerRegistry{value: val, isSet: true}
}

func (v NullableDockerRegistry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDockerRegistry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

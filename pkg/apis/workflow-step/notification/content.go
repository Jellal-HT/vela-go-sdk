/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package notification

import (
	"encoding/json"

	"github.com/chivalryq/vela-go-sdk/pkg/apis/utils"
)

// checks if the Content type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Content{}

// Content Specify the content of the email
type Content struct {
	// Specify the context body of the email
	body *string `json:"body,omitempty"`
	// Specify the subject of the email
	subject *string `json:"subject,omitempty"`
}

// NewContentWith instantiates a new Content object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContentWith() *Content {
	this := Content{}
	return &this
}

// NewContent instantiates a new Content object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContent() *Content {
	this := Content{}
	return &this
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *Content) GetBody() string {
	if o == nil || utils.IsNil(o.body) {
		var ret string
		return ret
	}
	return *o.body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Content) GetBodyOk() (*string, bool) {
	if o == nil || utils.IsNil(o.body) {
		return nil, false
	}
	return o.body, true
}

// HasBody returns a boolean if a field has been set.
func (o *Content) HasBody() bool {
	if o != nil && !utils.IsNil(o.body) {
		return true
	}

	return false
}

// Body gets a reference to the given string and assigns it to the body field.
// body:  Specify the context body of the email
func (o *Content) Body(v string) *Content {
	o.body = &v
	return o
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *Content) GetSubject() string {
	if o == nil || utils.IsNil(o.subject) {
		var ret string
		return ret
	}
	return *o.subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Content) GetSubjectOk() (*string, bool) {
	if o == nil || utils.IsNil(o.subject) {
		return nil, false
	}
	return o.subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *Content) HasSubject() bool {
	if o != nil && !utils.IsNil(o.subject) {
		return true
	}

	return false
}

// Subject gets a reference to the given string and assigns it to the subject field.
// subject:  Specify the subject of the email
func (o *Content) Subject(v string) *Content {
	o.subject = &v
	return o
}

func (o Content) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Content) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.body) {
		toSerialize["body"] = o.body
	}
	if !utils.IsNil(o.subject) {
		toSerialize["subject"] = o.subject
	}
	return toSerialize, nil
}

type NullableContent struct {
	value *Content
	isSet bool
}

func (v NullableContent) Get() *Content {
	return v.value
}

func (v *NullableContent) Set(val *Content) {
	v.value = val
	v.isSet = true
}

func (v NullableContent) IsSet() bool {
	return v.isSet
}

func (v *NullableContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContent(val *Content) *NullableContent {
	return &NullableContent{value: val, isSet: true}
}

func (v NullableContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

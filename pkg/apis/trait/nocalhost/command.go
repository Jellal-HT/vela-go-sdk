/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nocalhost

import (
	"encoding/json"

	"github.com/chivalryq/vela-go-sdk/pkg/apis/utils"
)

// checks if the Command type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Command{}

// Command struct for Command
type Command struct {
	debug []string `json:"debug"`
	run   []string `json:"run"`
}

// NewCommandWith instantiates a new Command object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommandWith(debug []string, run []string) *Command {
	this := Command{}
	this.debug = debug
	this.run = run
	return &this
}

// NewCommand instantiates a new Command object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommand() *Command {
	this := Command{}
	return &this
}

// GetDebug returns the Debug field value
func (o *Command) GetDebug() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.debug
}

// GetDebugOk returns a tuple with the Debug field value
// and a boolean to check if the value has been set.
func (o *Command) GetDebugOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.debug, true
}

// Debug sets field value
func (o *Command) Debug(v []string) *Command {
	o.debug = v
	return o
}

// GetRun returns the Run field value
func (o *Command) GetRun() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.run
}

// GetRunOk returns a tuple with the Run field value
// and a boolean to check if the value has been set.
func (o *Command) GetRunOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.run, true
}

// Run sets field value
func (o *Command) Run(v []string) *Command {
	o.run = v
	return o
}

func (o Command) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Command) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["debug"] = o.debug
	toSerialize["run"] = o.run
	return toSerialize, nil
}

type NullableCommand struct {
	value *Command
	isSet bool
}

func (v NullableCommand) Get() *Command {
	return v.value
}

func (v *NullableCommand) Set(val *Command) {
	v.value = val
	v.isSet = true
}

func (v NullableCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommand(val *Command) *NullableCommand {
	return &NullableCommand{value: val, isSet: true}
}

func (v NullableCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

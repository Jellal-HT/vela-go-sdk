/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nocalhost

import (
	"encoding/json"

	"github.com/chivalryq/vela-go-sdk/pkg/apis/utils"
)

// checks if the Requests type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Requests{}

// Requests struct for Requests
type Requests struct {
	cpu    *string `json:"cpu,omitempty"`
	memory *string `json:"memory,omitempty"`
}

// NewRequestsWith instantiates a new Requests object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestsWith() *Requests {
	this := Requests{}
	var cpu string = "0.5"
	this.cpu = &cpu
	var memory string = "512Mi"
	this.memory = &memory
	return &this
}

// NewRequests instantiates a new Requests object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequests() *Requests {
	this := Requests{}
	var cpu string = "0.5"
	this.cpu = &cpu
	var memory string = "512Mi"
	this.memory = &memory
	return &this
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *Requests) GetCpu() string {
	if o == nil || utils.IsNil(o.cpu) {
		var ret string
		return ret
	}
	return *o.cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Requests) GetCpuOk() (*string, bool) {
	if o == nil || utils.IsNil(o.cpu) {
		return nil, false
	}
	return o.cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *Requests) HasCpu() bool {
	if o != nil && !utils.IsNil(o.cpu) {
		return true
	}

	return false
}

// Cpu gets a reference to the given string and assigns it to the cpu field.
// cpu:
func (o *Requests) Cpu(v string) *Requests {
	o.cpu = &v
	return o
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *Requests) GetMemory() string {
	if o == nil || utils.IsNil(o.memory) {
		var ret string
		return ret
	}
	return *o.memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Requests) GetMemoryOk() (*string, bool) {
	if o == nil || utils.IsNil(o.memory) {
		return nil, false
	}
	return o.memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *Requests) HasMemory() bool {
	if o != nil && !utils.IsNil(o.memory) {
		return true
	}

	return false
}

// Memory gets a reference to the given string and assigns it to the memory field.
// memory:
func (o *Requests) Memory(v string) *Requests {
	o.memory = &v
	return o
}

func (o Requests) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Requests) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.cpu) {
		toSerialize["cpu"] = o.cpu
	}
	if !utils.IsNil(o.memory) {
		toSerialize["memory"] = o.memory
	}
	return toSerialize, nil
}

type NullableRequests struct {
	value *Requests
	isSet bool
}

func (v NullableRequests) Get() *Requests {
	return v.value
}

func (v *NullableRequests) Set(val *Requests) {
	v.value = val
	v.isSet = true
}

func (v NullableRequests) IsSet() bool {
	return v.isSet
}

func (v *NullableRequests) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequests(val *Requests) *NullableRequests {
	return &NullableRequests{value: val, isSet: true}
}

func (v NullableRequests) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequests) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

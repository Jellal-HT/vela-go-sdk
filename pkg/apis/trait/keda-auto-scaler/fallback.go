/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keda_auto_scaler

import (
	"encoding/json"

	"github.com/chivalryq/vela-go-sdk/pkg/apis/utils"
)

// checks if the Fallback type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Fallback{}

// Fallback Specify the fallback value when the metrics server is not available.
type Fallback struct {
	// Specify the failure threshold of the scaler. Default: 3.
	FailureThreshold *int32 `json:"failureThreshold,omitempty"`
	// Specify the replica when failed to get metrics. Default to minReplicaCount.
	Replicas *int32 `json:"replicas,omitempty"`
}

// NewFallbackWith instantiates a new Fallback object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFallbackWith() *Fallback {
	this := Fallback{}
	var failureThreshold int32 = 3
	this.FailureThreshold = &failureThreshold
	var replicas int32 = 1
	this.Replicas = &replicas
	return &this
}

// NewFallback instantiates a new Fallback object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFallback() *Fallback {
	this := Fallback{}
	var failureThreshold int32 = 3
	this.FailureThreshold = &failureThreshold
	var replicas int32 = 1
	this.Replicas = &replicas
	return &this
}

// NewFallbacks converts a list Fallback pointers to objects.
// This is helpful when the SetFallback requires a list of objects
func NewFallbacks(ps ...*Fallback) []Fallback {
	objs := []Fallback{}
	for _, p := range ps {
		objs = append(objs, *p)
	}
	return objs
}

// GetFailureThreshold returns the FailureThreshold field value if set, zero value otherwise.
func (o *Fallback) GetFailureThreshold() int32 {
	if o == nil || utils.IsNil(o.FailureThreshold) {
		var ret int32
		return ret
	}
	return *o.FailureThreshold
}

// GetFailureThresholdOk returns a tuple with the FailureThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fallback) GetFailureThresholdOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.FailureThreshold) {
		return nil, false
	}
	return o.FailureThreshold, true
}

// HasFailureThreshold returns a boolean if a field has been set.
func (o *Fallback) HasFailureThreshold() bool {
	if o != nil && !utils.IsNil(o.FailureThreshold) {
		return true
	}

	return false
}

// SetFailureThreshold gets a reference to the given int32 and assigns it to the failureThreshold field.
// FailureThreshold:  Specify the failure threshold of the scaler. Default: 3.
func (o *Fallback) SetFailureThreshold(v int32) *Fallback {
	o.FailureThreshold = &v
	return o
}

// GetReplicas returns the Replicas field value if set, zero value otherwise.
func (o *Fallback) GetReplicas() int32 {
	if o == nil || utils.IsNil(o.Replicas) {
		var ret int32
		return ret
	}
	return *o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fallback) GetReplicasOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.Replicas) {
		return nil, false
	}
	return o.Replicas, true
}

// HasReplicas returns a boolean if a field has been set.
func (o *Fallback) HasReplicas() bool {
	if o != nil && !utils.IsNil(o.Replicas) {
		return true
	}

	return false
}

// SetReplicas gets a reference to the given int32 and assigns it to the replicas field.
// Replicas:  Specify the replica when failed to get metrics. Default to minReplicaCount.
func (o *Fallback) SetReplicas(v int32) *Fallback {
	o.Replicas = &v
	return o
}

func (o Fallback) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Fallback) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.FailureThreshold) {
		toSerialize["failureThreshold"] = o.FailureThreshold
	}
	if !utils.IsNil(o.Replicas) {
		toSerialize["replicas"] = o.Replicas
	}
	return toSerialize, nil
}

type NullableFallback struct {
	value *Fallback
	isSet bool
}

func (v NullableFallback) Get() *Fallback {
	return v.value
}

func (v *NullableFallback) Set(val *Fallback) {
	v.value = val
	v.isSet = true
}

func (v NullableFallback) IsSet() bool {
	return v.isSet
}

func (v *NullableFallback) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFallback(val *Fallback) *NullableFallback {
	return &NullableFallback{value: val, isSet: true}
}

func (v NullableFallback) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFallback) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

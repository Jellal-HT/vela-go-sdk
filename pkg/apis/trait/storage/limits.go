/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"

	"github.com/chivalryq/vela-go-sdk/pkg/apis/utils"
)

// checks if the Limits type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Limits{}

// Limits struct for Limits
type Limits struct {
	storage string `json:"storage"`
}

// NewLimitsWith instantiates a new Limits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLimitsWith(storage string) *Limits {
	this := Limits{}
	this.storage = storage
	return &this
}

// NewLimits instantiates a new Limits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLimits() *Limits {
	this := Limits{}
	return &this
}

// GetStorage returns the Storage field value
func (o *Limits) GetStorage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.storage
}

// GetStorageOk returns a tuple with the Storage field value
// and a boolean to check if the value has been set.
func (o *Limits) GetStorageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.storage, true
}

// Storage sets field value
func (o *Limits) Storage(v string) *Limits {
	o.storage = v
	return o
}

func (o Limits) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Limits) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["storage"] = o.storage
	return toSerialize, nil
}

type NullableLimits struct {
	value *Limits
	isSet bool
}

func (v NullableLimits) Get() *Limits {
	return v.value
}

func (v *NullableLimits) Set(val *Limits) {
	v.value = val
	v.isSet = true
}

func (v NullableLimits) IsSet() bool {
	return v.isSet
}

func (v *NullableLimits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLimits(val *Limits) *NullableLimits {
	return &NullableLimits{value: val, isSet: true}
}

func (v NullableLimits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLimits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

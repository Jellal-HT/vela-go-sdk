/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apply_terraform_config

import (
	"encoding/json"

	"vela-go-sdk/apis/utils"
)

// checks if the ApplyTerraformConfigSpecProviderRef type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApplyTerraformConfigSpecProviderRef{}

// ApplyTerraformConfigSpecProviderRef providerRef specifies the reference to Provider
type ApplyTerraformConfigSpecProviderRef struct {
	name      string `json:"name"`
	namespace string `json:"namespace"`
}

// NewApplyTerraformConfigSpecProviderRefWith instantiates a new ApplyTerraformConfigSpecProviderRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplyTerraformConfigSpecProviderRefWith(name string, namespace string) *ApplyTerraformConfigSpecProviderRef {
	this := ApplyTerraformConfigSpecProviderRef{}
	this.name = name
	this.namespace = namespace
	return &this
}

// NewApplyTerraformConfigSpecProviderRef instantiates a new ApplyTerraformConfigSpecProviderRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplyTerraformConfigSpecProviderRef() *ApplyTerraformConfigSpecProviderRef {
	this := ApplyTerraformConfigSpecProviderRef{}
	return &this
}

// GetName returns the Name field value
func (o *ApplyTerraformConfigSpecProviderRef) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApplyTerraformConfigSpecProviderRef) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.name, true
}

// Name sets field value
func (o *ApplyTerraformConfigSpecProviderRef) Name(v string) *ApplyTerraformConfigSpecProviderRef {
	o.name = v
	return o
}

// GetNamespace returns the Namespace field value
func (o *ApplyTerraformConfigSpecProviderRef) GetNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
func (o *ApplyTerraformConfigSpecProviderRef) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.namespace, true
}

// Namespace sets field value
func (o *ApplyTerraformConfigSpecProviderRef) Namespace(v string) *ApplyTerraformConfigSpecProviderRef {
	o.namespace = v
	return o
}

func (o ApplyTerraformConfigSpecProviderRef) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplyTerraformConfigSpecProviderRef) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.name
	toSerialize["namespace"] = o.namespace
	return toSerialize, nil
}

type NullableApplyTerraformConfigSpecProviderRef struct {
	value *ApplyTerraformConfigSpecProviderRef
	isSet bool
}

func (v NullableApplyTerraformConfigSpecProviderRef) Get() *ApplyTerraformConfigSpecProviderRef {
	return v.value
}

func (v *NullableApplyTerraformConfigSpecProviderRef) Set(val *ApplyTerraformConfigSpecProviderRef) {
	v.value = val
	v.isSet = true
}

func (v NullableApplyTerraformConfigSpecProviderRef) IsSet() bool {
	return v.isSet
}

func (v *NullableApplyTerraformConfigSpecProviderRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplyTerraformConfigSpecProviderRef(val *ApplyTerraformConfigSpecProviderRef) *NullableApplyTerraformConfigSpecProviderRef {
	return &NullableApplyTerraformConfigSpecProviderRef{value: val, isSet: true}
}

func (v NullableApplyTerraformConfigSpecProviderRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplyTerraformConfigSpecProviderRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

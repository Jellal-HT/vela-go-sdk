/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apply_terraform_config

import (
	"encoding/json"

	"vela-go-sdk/apis/utils"
)

// checks if the ApplyTerraformConfigSpecSourceOneOf type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApplyTerraformConfigSpecSourceOneOf{}

// ApplyTerraformConfigSpecSourceOneOf struct for ApplyTerraformConfigSpecSourceOneOf
type ApplyTerraformConfigSpecSourceOneOf struct {
	// directly specify the hcl of the terraform configuration
	hcl string `json:"hcl"`
}

// ApplyTerraformConfigSpecSourceOneOfWith instantiates a new ApplyTerraformConfigSpecSourceOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func ApplyTerraformConfigSpecSourceOneOfWith(hcl string) *ApplyTerraformConfigSpecSourceOneOf {
	this := ApplyTerraformConfigSpecSourceOneOf{}
	this.hcl = hcl
	return &this
}

// NewApplyTerraformConfigSpecSourceOneOf instantiates a new ApplyTerraformConfigSpecSourceOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplyTerraformConfigSpecSourceOneOf() *ApplyTerraformConfigSpecSourceOneOf {
	this := ApplyTerraformConfigSpecSourceOneOf{}
	return &this
}

// GetHcl returns the Hcl field value
func (o *ApplyTerraformConfigSpecSourceOneOf) GetHcl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.hcl
}

// GetHclOk returns a tuple with the Hcl field value
// and a boolean to check if the value has been set.
func (o *ApplyTerraformConfigSpecSourceOneOf) GetHclOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.hcl, true
}

// Hcl sets field value
func (o *ApplyTerraformConfigSpecSourceOneOf) Hcl(v string) *ApplyTerraformConfigSpecSourceOneOf {
	o.hcl = v
	return o
}

func (o ApplyTerraformConfigSpecSourceOneOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplyTerraformConfigSpecSourceOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hcl"] = o.hcl
	return toSerialize, nil
}

type NullableApplyTerraformConfigSpecSourceOneOf struct {
	value *ApplyTerraformConfigSpecSourceOneOf
	isSet bool
}

func (v NullableApplyTerraformConfigSpecSourceOneOf) Get() *ApplyTerraformConfigSpecSourceOneOf {
	return v.value
}

func (v *NullableApplyTerraformConfigSpecSourceOneOf) Set(val *ApplyTerraformConfigSpecSourceOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableApplyTerraformConfigSpecSourceOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableApplyTerraformConfigSpecSourceOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplyTerraformConfigSpecSourceOneOf(val *ApplyTerraformConfigSpecSourceOneOf) *NullableApplyTerraformConfigSpecSourceOneOf {
	return &NullableApplyTerraformConfigSpecSourceOneOf{value: val, isSet: true}
}

func (v NullableApplyTerraformConfigSpecSourceOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplyTerraformConfigSpecSourceOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

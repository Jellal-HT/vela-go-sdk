/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apply_application_in_parallel

import (
	"encoding/json"

	"github.com/oam-dev/kubevela-core-api/apis/core.oam.dev/common"
	"github.com/oam-dev/kubevela-core-api/pkg/oam/util"

	"vela-go-sdk/api"
	"vela-go-sdk/apis/utils"
)

// checks if the ApplyApplicationInParallelSpec type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ApplyApplicationInParallelSpec{}

// ApplyApplicationInParallelSpec struct for ApplyApplicationInParallelSpec
type ApplyApplicationInParallelSpec struct {
}

// NewApplyApplicationInParallelSpecWith instantiates a new ApplyApplicationInParallelSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplyApplicationInParallelSpecWith() *ApplyApplicationInParallelSpec {
	this := ApplyApplicationInParallelSpec{}
	return &this
}

// NewApplyApplicationInParallelSpec instantiates a new ApplyApplicationInParallelSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplyApplicationInParallelSpec() *ApplyApplicationInParallelSpec {
	this := ApplyApplicationInParallelSpec{}
	return &this
}

func (o ApplyApplicationInParallelSpec) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplyApplicationInParallelSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	return toSerialize, nil
}

type NullableApplyApplicationInParallelSpec struct {
	value *ApplyApplicationInParallelSpec
	isSet bool
}

func (v NullableApplyApplicationInParallelSpec) Get() *ApplyApplicationInParallelSpec {
	return v.value
}

func (v *NullableApplyApplicationInParallelSpec) Set(val *ApplyApplicationInParallelSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableApplyApplicationInParallelSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableApplyApplicationInParallelSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplyApplicationInParallelSpec(val *ApplyApplicationInParallelSpec) *NullableApplyApplicationInParallelSpec {
	return &NullableApplyApplicationInParallelSpec{value: val, isSet: true}
}

func (v NullableApplyApplicationInParallelSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplyApplicationInParallelSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

const ApplyApplicationInParallelType = "apply-application-in-parallel"

type ApplyApplicationInParallelWorkflowStep struct {
	Base       api.WorkflowStepBase
	Properties ApplyApplicationInParallelSpec
}

func ApplyApplicationInParallel() *ApplyApplicationInParallelWorkflowStep {
	a := &ApplyApplicationInParallelWorkflowStep{Base: api.WorkflowStepBase{}}
	return a
}

func (a *ApplyApplicationInParallelWorkflowStep) Build() common.WorkflowStep {
	res := common.WorkflowStep{
		Properties: util.Object2RawExtension(a.Properties),
		Type:       ApplyApplicationInParallelType,
	}
	return res
}

func (a *ApplyApplicationInParallelWorkflowStep) Props() *ApplyApplicationInParallelSpec {
	return &a.Properties
}

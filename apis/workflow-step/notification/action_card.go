/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package notification

import (
	"encoding/json"

	"vela-go-sdk/apis/utils"
)

// checks if the ActionCard type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ActionCard{}

// ActionCard struct for ActionCard
type ActionCard struct {
	btnOrientation string         `json:"btnOrientation"`
	btns           NullableString `json:"btns"`
	hideAvatar     string         `json:"hideAvatar"`
	singleTitle    string         `json:"singleTitle"`
	singleURL      string         `json:"singleURL"`
	text           string         `json:"text"`
	title          string         `json:"title"`
}

// NewActionCardWith instantiates a new ActionCard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionCardWith(btnOrientation string, btns NullableString, hideAvatar string, singleTitle string, singleURL string, text string, title string) *ActionCard {
	this := ActionCard{}
	this.btnOrientation = btnOrientation
	this.btns = btns
	this.hideAvatar = hideAvatar
	this.singleTitle = singleTitle
	this.singleURL = singleURL
	this.text = text
	this.title = title
	return &this
}

// NewActionCard instantiates a new ActionCard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionCard() *ActionCard {
	this := ActionCard{}
	return &this
}

// GetBtnOrientation returns the BtnOrientation field value
func (o *ActionCard) GetBtnOrientation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.btnOrientation
}

// GetBtnOrientationOk returns a tuple with the BtnOrientation field value
// and a boolean to check if the value has been set.
func (o *ActionCard) GetBtnOrientationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.btnOrientation, true
}

// BtnOrientation sets field value
func (o *ActionCard) BtnOrientation(v string) *ActionCard {
	o.btnOrientation = v
	return o
}

// GetBtns returns the Btns field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ActionCard) GetBtns() string {
	if o == nil || o.btns.Get() == nil {
		var ret string
		return ret
	}

	return *o.btns.Get()
}

// GetBtnsOk returns a tuple with the Btns field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActionCard) GetBtnsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.btns.Get(), o.btns.IsSet()
}

// Btns sets field value
func (o *ActionCard) Btns(v string) *ActionCard {
	o.btns.Set(&v)
}

// GetHideAvatar returns the HideAvatar field value
func (o *ActionCard) GetHideAvatar() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.hideAvatar
}

// GetHideAvatarOk returns a tuple with the HideAvatar field value
// and a boolean to check if the value has been set.
func (o *ActionCard) GetHideAvatarOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.hideAvatar, true
}

// HideAvatar sets field value
func (o *ActionCard) HideAvatar(v string) *ActionCard {
	o.hideAvatar = v
	return o
}

// GetSingleTitle returns the SingleTitle field value
func (o *ActionCard) GetSingleTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.singleTitle
}

// GetSingleTitleOk returns a tuple with the SingleTitle field value
// and a boolean to check if the value has been set.
func (o *ActionCard) GetSingleTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.singleTitle, true
}

// SingleTitle sets field value
func (o *ActionCard) SingleTitle(v string) *ActionCard {
	o.singleTitle = v
	return o
}

// GetSingleURL returns the SingleURL field value
func (o *ActionCard) GetSingleURL() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.singleURL
}

// GetSingleURLOk returns a tuple with the SingleURL field value
// and a boolean to check if the value has been set.
func (o *ActionCard) GetSingleURLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.singleURL, true
}

// SingleURL sets field value
func (o *ActionCard) SingleURL(v string) *ActionCard {
	o.singleURL = v
	return o
}

// GetText returns the Text field value
func (o *ActionCard) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *ActionCard) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.text, true
}

// Text sets field value
func (o *ActionCard) Text(v string) *ActionCard {
	o.text = v
	return o
}

// GetTitle returns the Title field value
func (o *ActionCard) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ActionCard) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.title, true
}

// Title sets field value
func (o *ActionCard) Title(v string) *ActionCard {
	o.title = v
	return o
}

func (o ActionCard) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActionCard) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["btnOrientation"] = o.btnOrientation
	toSerialize["btns"] = o.btns.Get()
	toSerialize["hideAvatar"] = o.hideAvatar
	toSerialize["singleTitle"] = o.singleTitle
	toSerialize["singleURL"] = o.singleURL
	toSerialize["text"] = o.text
	toSerialize["title"] = o.title
	return toSerialize, nil
}

type NullableActionCard struct {
	value *ActionCard
	isSet bool
}

func (v NullableActionCard) Get() *ActionCard {
	return v.value
}

func (v *NullableActionCard) Set(val *ActionCard) {
	v.value = val
	v.isSet = true
}

func (v NullableActionCard) IsSet() bool {
	return v.isSet
}

func (v *NullableActionCard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionCard(val *ActionCard) *NullableActionCard {
	return &NullableActionCard{value: val, isSet: true}
}

func (v NullableActionCard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionCard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

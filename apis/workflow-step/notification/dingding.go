/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package notification

import (
	"encoding/json"

	"vela-go-sdk/apis/utils"
)

// checks if the Dingding type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Dingding{}

// Dingding Please fulfill its url and message if you want to send DingTalk messages
type Dingding struct {
	message Message `json:"message"`
	url     Url     `json:"url"`
}

// NewDingdingWith instantiates a new Dingding object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDingdingWith(message Message, url Url) *Dingding {
	this := Dingding{}
	this.message = message
	this.url = url
	return &this
}

// NewDingding instantiates a new Dingding object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDingding() *Dingding {
	this := Dingding{}
	return &this
}

// GetMessage returns the Message field value
func (o *Dingding) GetMessage() Message {
	if o == nil {
		var ret Message
		return ret
	}

	return o.message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *Dingding) GetMessageOk() (*Message, bool) {
	if o == nil {
		return nil, false
	}
	return &o.message, true
}

// Message sets field value
func (o *Dingding) Message(v Message) *Dingding {
	o.message = v
	return o
}

// GetUrl returns the Url field value
func (o *Dingding) GetUrl() Url {
	if o == nil {
		var ret Url
		return ret
	}

	return o.url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *Dingding) GetUrlOk() (*Url, bool) {
	if o == nil {
		return nil, false
	}
	return &o.url, true
}

// Url sets field value
func (o *Dingding) Url(v Url) *Dingding {
	o.url = v
	return o
}

func (o Dingding) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dingding) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message"] = o.message
	toSerialize["url"] = o.url
	return toSerialize, nil
}

type NullableDingding struct {
	value *Dingding
	isSet bool
}

func (v NullableDingding) Get() *Dingding {
	return v.value
}

func (v *NullableDingding) Set(val *Dingding) {
	v.value = val
	v.isSet = true
}

func (v NullableDingding) IsSet() bool {
	return v.isSet
}

func (v *NullableDingding) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDingding(val *Dingding) *NullableDingding {
	return &NullableDingding{value: val, isSet: true}
}

func (v NullableDingding) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDingding) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package notification

import (
	"encoding/json"

	"vela-go-sdk/apis/utils"
)

// checks if the NotificationSpecSlackMessageAttachments type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &NotificationSpecSlackMessageAttachments{}

// NotificationSpecSlackMessageAttachments struct for NotificationSpecSlackMessageAttachments
type NotificationSpecSlackMessageAttachments struct {
	blocks NullableString `json:"blocks,omitempty"`
	color  *string        `json:"color,omitempty"`
}

// NotificationSpecSlackMessageAttachmentsWith instantiates a new NotificationSpecSlackMessageAttachments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NotificationSpecSlackMessageAttachmentsWith() *NotificationSpecSlackMessageAttachments {
	this := NotificationSpecSlackMessageAttachments{}
	return &this
}

// NewNotificationSpecSlackMessageAttachments instantiates a new NotificationSpecSlackMessageAttachments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationSpecSlackMessageAttachments() *NotificationSpecSlackMessageAttachments {
	this := NotificationSpecSlackMessageAttachments{}
	return &this
}

// GetBlocks returns the Blocks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NotificationSpecSlackMessageAttachments) GetBlocks() string {
	if o == nil || utils.IsNil(o.blocks.Get()) {
		var ret string
		return ret
	}
	return *o.blocks.Get()
}

// GetBlocksOk returns a tuple with the Blocks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NotificationSpecSlackMessageAttachments) GetBlocksOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.blocks.Get(), o.blocks.IsSet()
}

// HasBlocks returns a boolean if a field has been set.
func (o *NotificationSpecSlackMessageAttachments) HasBlocks() bool {
	if o != nil && o.blocks.IsSet() {
		return true
	}

	return false
}

// SetBlocks gets a reference to the given NullableString and assigns it to the blocks field.
// blocks:

func (o *NotificationSpecSlackMessageAttachments) Blocks(v string) *NotificationSpecSlackMessageAttachments {
	o.blocks.Set(&v)
	return o
}

// SetBlocksNil sets the value for Blocks to be an explicit nil
func (o *NotificationSpecSlackMessageAttachments) SetBlocksNil() {
	o.blocks.Set(nil)
}

// UnsetBlocks ensures that no value is present for Blocks, not even an explicit nil
func (o *NotificationSpecSlackMessageAttachments) UnsetBlocks() {
	o.blocks.Unset()
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *NotificationSpecSlackMessageAttachments) GetColor() string {
	if o == nil || utils.IsNil(o.color) {
		var ret string
		return ret
	}
	return *o.color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationSpecSlackMessageAttachments) GetColorOk() (*string, bool) {
	if o == nil || utils.IsNil(o.color) {
		return nil, false
	}
	return o.color, true
}

// HasColor returns a boolean if a field has been set.
func (o *NotificationSpecSlackMessageAttachments) HasColor() bool {
	if o != nil && !utils.IsNil(o.color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the color field.
// color:

func (o *NotificationSpecSlackMessageAttachments) Color(v string) *NotificationSpecSlackMessageAttachments {
	o.color = &v
	return o
}

func (o NotificationSpecSlackMessageAttachments) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationSpecSlackMessageAttachments) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.blocks.IsSet() {
		toSerialize["blocks"] = o.blocks.Get()
	}
	if !utils.IsNil(o.color) {
		toSerialize["color"] = o.color
	}
	return toSerialize, nil
}

type NullableNotificationSpecSlackMessageAttachments struct {
	value *NotificationSpecSlackMessageAttachments
	isSet bool
}

func (v NullableNotificationSpecSlackMessageAttachments) Get() *NotificationSpecSlackMessageAttachments {
	return v.value
}

func (v *NullableNotificationSpecSlackMessageAttachments) Set(val *NotificationSpecSlackMessageAttachments) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationSpecSlackMessageAttachments) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationSpecSlackMessageAttachments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationSpecSlackMessageAttachments(val *NotificationSpecSlackMessageAttachments) *NullableNotificationSpecSlackMessageAttachments {
	return &NullableNotificationSpecSlackMessageAttachments{value: val, isSet: true}
}

func (v NullableNotificationSpecSlackMessageAttachments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationSpecSlackMessageAttachments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

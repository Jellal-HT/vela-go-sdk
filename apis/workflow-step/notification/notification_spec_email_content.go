/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package notification

import (
	"encoding/json"

	"vela-go-sdk/apis/utils"
)

// checks if the NotificationSpecEmailContent type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &NotificationSpecEmailContent{}

// NotificationSpecEmailContent Specify the content of the email
type NotificationSpecEmailContent struct {
	// Specify the context body of the email
	body string `json:"body"`
	// Specify the subject of the email
	subject string `json:"subject"`
}

// NotificationSpecEmailContentWith instantiates a new NotificationSpecEmailContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NotificationSpecEmailContentWith(body string, subject string) *NotificationSpecEmailContent {
	this := NotificationSpecEmailContent{}
	this.body = body
	this.subject = subject
	return &this
}

// NewNotificationSpecEmailContent instantiates a new NotificationSpecEmailContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationSpecEmailContent() *NotificationSpecEmailContent {
	this := NotificationSpecEmailContent{}
	return &this
}

// GetBody returns the Body field value
func (o *NotificationSpecEmailContent) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *NotificationSpecEmailContent) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.body, true
}

// Body sets field value
func (o *NotificationSpecEmailContent) Body(v string) *NotificationSpecEmailContent {
	o.body = v
	return o
}

// GetSubject returns the Subject field value
func (o *NotificationSpecEmailContent) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *NotificationSpecEmailContent) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.subject, true
}

// Subject sets field value
func (o *NotificationSpecEmailContent) Subject(v string) *NotificationSpecEmailContent {
	o.subject = v
	return o
}

func (o NotificationSpecEmailContent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationSpecEmailContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["body"] = o.body
	toSerialize["subject"] = o.subject
	return toSerialize, nil
}

type NullableNotificationSpecEmailContent struct {
	value *NotificationSpecEmailContent
	isSet bool
}

func (v NullableNotificationSpecEmailContent) Get() *NotificationSpecEmailContent {
	return v.value
}

func (v *NullableNotificationSpecEmailContent) Set(val *NotificationSpecEmailContent) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationSpecEmailContent) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationSpecEmailContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationSpecEmailContent(val *NotificationSpecEmailContent) *NullableNotificationSpecEmailContent {
	return &NullableNotificationSpecEmailContent{value: val, isSet: true}
}

func (v NullableNotificationSpecEmailContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationSpecEmailContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

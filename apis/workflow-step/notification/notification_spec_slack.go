/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package notification

import (
	"encoding/json"

	"vela-go-sdk/apis/utils"
)

// checks if the NotificationSpecSlack type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &NotificationSpecSlack{}

// NotificationSpecSlack Please fulfill its url and message if you want to send Slack messages
type NotificationSpecSlack struct {
	message NotificationSpecSlackMessage `json:"message"`
	url     NotificationSpecSlackUrl     `json:"url"`
}

// NotificationSpecSlackWith instantiates a new NotificationSpecSlack object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NotificationSpecSlackWith(message NotificationSpecSlackMessage, url NotificationSpecSlackUrl) *NotificationSpecSlack {
	this := NotificationSpecSlack{}
	this.message = message
	this.url = url
	return &this
}

// NewNotificationSpecSlack instantiates a new NotificationSpecSlack object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationSpecSlack() *NotificationSpecSlack {
	this := NotificationSpecSlack{}
	return &this
}

// GetMessage returns the Message field value
func (o *NotificationSpecSlack) GetMessage() NotificationSpecSlackMessage {
	if o == nil {
		var ret NotificationSpecSlackMessage
		return ret
	}

	return o.message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *NotificationSpecSlack) GetMessageOk() (*NotificationSpecSlackMessage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.message, true
}

// Message sets field value
func (o *NotificationSpecSlack) Message(v NotificationSpecSlackMessage) *NotificationSpecSlack {
	o.message = v
	return o
}

// GetUrl returns the Url field value
func (o *NotificationSpecSlack) GetUrl() NotificationSpecSlackUrl {
	if o == nil {
		var ret NotificationSpecSlackUrl
		return ret
	}

	return o.url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *NotificationSpecSlack) GetUrlOk() (*NotificationSpecSlackUrl, bool) {
	if o == nil {
		return nil, false
	}
	return &o.url, true
}

// Url sets field value
func (o *NotificationSpecSlack) Url(v NotificationSpecSlackUrl) *NotificationSpecSlack {
	o.url = v
	return o
}

func (o NotificationSpecSlack) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationSpecSlack) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message"] = o.message
	toSerialize["url"] = o.url
	return toSerialize, nil
}

type NullableNotificationSpecSlack struct {
	value *NotificationSpecSlack
	isSet bool
}

func (v NullableNotificationSpecSlack) Get() *NotificationSpecSlack {
	return v.value
}

func (v *NullableNotificationSpecSlack) Set(val *NotificationSpecSlack) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationSpecSlack) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationSpecSlack) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationSpecSlack(val *NotificationSpecSlack) *NullableNotificationSpecSlack {
	return &NullableNotificationSpecSlack{value: val, isSet: true}
}

func (v NullableNotificationSpecSlack) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationSpecSlack) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

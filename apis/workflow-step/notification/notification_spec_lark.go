/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package notification

import (
	"encoding/json"

	"vela-go-sdk/apis/utils"
)

// checks if the NotificationSpecLark type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &NotificationSpecLark{}

// NotificationSpecLark Please fulfill its url and message if you want to send Lark messages
type NotificationSpecLark struct {
	message NotificationSpecLarkMessage `json:"message"`
	url     NotificationSpecLarkUrl     `json:"url"`
}

// NotificationSpecLarkWith instantiates a new NotificationSpecLark object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NotificationSpecLarkWith(message NotificationSpecLarkMessage, url NotificationSpecLarkUrl) *NotificationSpecLark {
	this := NotificationSpecLark{}
	this.message = message
	this.url = url
	return &this
}

// NewNotificationSpecLark instantiates a new NotificationSpecLark object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationSpecLark() *NotificationSpecLark {
	this := NotificationSpecLark{}
	return &this
}

// GetMessage returns the Message field value
func (o *NotificationSpecLark) GetMessage() NotificationSpecLarkMessage {
	if o == nil {
		var ret NotificationSpecLarkMessage
		return ret
	}

	return o.message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *NotificationSpecLark) GetMessageOk() (*NotificationSpecLarkMessage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.message, true
}

// Message sets field value
func (o *NotificationSpecLark) Message(v NotificationSpecLarkMessage) *NotificationSpecLark {
	o.message = v
	return o
}

// GetUrl returns the Url field value
func (o *NotificationSpecLark) GetUrl() NotificationSpecLarkUrl {
	if o == nil {
		var ret NotificationSpecLarkUrl
		return ret
	}

	return o.url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *NotificationSpecLark) GetUrlOk() (*NotificationSpecLarkUrl, bool) {
	if o == nil {
		return nil, false
	}
	return &o.url, true
}

// Url sets field value
func (o *NotificationSpecLark) Url(v NotificationSpecLarkUrl) *NotificationSpecLark {
	o.url = v
	return o
}

func (o NotificationSpecLark) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationSpecLark) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message"] = o.message
	toSerialize["url"] = o.url
	return toSerialize, nil
}

type NullableNotificationSpecLark struct {
	value *NotificationSpecLark
	isSet bool
}

func (v NullableNotificationSpecLark) Get() *NotificationSpecLark {
	return v.value
}

func (v *NullableNotificationSpecLark) Set(val *NotificationSpecLark) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationSpecLark) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationSpecLark) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationSpecLark(val *NotificationSpecLark) *NullableNotificationSpecLark {
	return &NullableNotificationSpecLark{value: val, isSet: true}
}

func (v NullableNotificationSpecLark) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationSpecLark) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

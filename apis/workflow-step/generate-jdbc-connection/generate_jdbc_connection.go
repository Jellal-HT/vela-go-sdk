/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package generate_jdbc_connection

import (
	"encoding/json"

	"github.com/oam-dev/kubevela-core-api/apis/core.oam.dev/common"
	"github.com/oam-dev/kubevela-core-api/pkg/oam/util"

	"vela-go-sdk/api"
	"vela-go-sdk/apis/utils"
)

// checks if the GenerateJdbcConnectionSpec type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &GenerateJdbcConnectionSpec{}

// GenerateJdbcConnectionSpec struct for GenerateJdbcConnectionSpec
type GenerateJdbcConnectionSpec struct {
	// Specify the name of the secret generated by database component
	name string `json:"name"`
	// Specify the namespace of the secret generated by database component
	namespace *string `json:"namespace,omitempty"`
}

// NewGenerateJdbcConnectionSpecWith instantiates a new GenerateJdbcConnectionSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateJdbcConnectionSpecWith(name string) *GenerateJdbcConnectionSpec {
	this := GenerateJdbcConnectionSpec{}
	this.name = name
	return &this
}

// NewGenerateJdbcConnectionSpec instantiates a new GenerateJdbcConnectionSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateJdbcConnectionSpec() *GenerateJdbcConnectionSpec {
	this := GenerateJdbcConnectionSpec{}
	return &this
}

// GetName returns the Name field value
func (o *GenerateJdbcConnectionWorkflowStep) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Properties.name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GenerateJdbcConnectionWorkflowStep) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Properties.name, true
}

// Name sets field value
func (o *GenerateJdbcConnectionWorkflowStep) Name(v string) *GenerateJdbcConnectionWorkflowStep {
	o.Properties.name = v
	return o
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *GenerateJdbcConnectionWorkflowStep) GetNamespace() string {
	if o == nil || utils.IsNil(o.Properties.namespace) {
		var ret string
		return ret
	}
	return *o.Properties.namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateJdbcConnectionWorkflowStep) GetNamespaceOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Properties.namespace) {
		return nil, false
	}
	return o.Properties.namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *GenerateJdbcConnectionWorkflowStep) HasNamespace() bool {
	if o != nil && !utils.IsNil(o.Properties.namespace) {
		return true
	}

	return false
}

// Namespace gets a reference to the given string and assigns it to the namespace field.
// namespace:  Specify the namespace of the secret generated by database component
func (o *GenerateJdbcConnectionWorkflowStep) Namespace(v string) *GenerateJdbcConnectionWorkflowStep {
	o.Properties.namespace = &v
	return o
}

func (o GenerateJdbcConnectionSpec) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenerateJdbcConnectionSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.name
	if !utils.IsNil(o.namespace) {
		toSerialize["namespace"] = o.namespace
	}
	return toSerialize, nil
}

type NullableGenerateJdbcConnectionSpec struct {
	value *GenerateJdbcConnectionSpec
	isSet bool
}

func (v NullableGenerateJdbcConnectionSpec) Get() *GenerateJdbcConnectionSpec {
	return v.value
}

func (v *NullableGenerateJdbcConnectionSpec) Set(val *GenerateJdbcConnectionSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateJdbcConnectionSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateJdbcConnectionSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateJdbcConnectionSpec(val *GenerateJdbcConnectionSpec) *NullableGenerateJdbcConnectionSpec {
	return &NullableGenerateJdbcConnectionSpec{value: val, isSet: true}
}

func (v NullableGenerateJdbcConnectionSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateJdbcConnectionSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

const GenerateJdbcConnectionType = "generate-jdbc-connection"

type GenerateJdbcConnectionWorkflowStep struct {
	Base       api.WorkflowStepBase
	Properties GenerateJdbcConnectionSpec
}

func GenerateJdbcConnection() *GenerateJdbcConnectionWorkflowStep {
	g := &GenerateJdbcConnectionWorkflowStep{Base: api.WorkflowStepBase{}}
	return g
}

func (g *GenerateJdbcConnectionWorkflowStep) Build() common.WorkflowStep {
	res := common.WorkflowStep{
		Properties: util.Object2RawExtension(g.Properties),
		Type:       GenerateJdbcConnectionType,
	}
	return res
}

func (g *GenerateJdbcConnectionWorkflowStep) Props() *GenerateJdbcConnectionSpec {
	return &g.Properties
}

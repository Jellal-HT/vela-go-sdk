/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deploy2runtime

import (
"encoding/json"
. "vela-go-sdk/api"
"vela-go-sdk/apis/utils"

"github.com/oam-dev/kubevela-core-api/apis/core.oam.dev/common"
"github.com/oam-dev/kubevela-core-api/pkg/oam/util"
)



    
    // checks if the Deploy2runtimeSpec type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Deploy2runtimeSpec{}

// Deploy2runtimeSpec struct for Deploy2runtimeSpec
type Deploy2runtimeSpec struct {
	// Declare the runtime clusters to apply, if empty, all runtime clusters will be used
	clusters []string `json:"clusters,omitempty"`
}

// NewDeploy2runtimeSpec instantiates a new Deploy2runtimeSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploy2runtimeSpec() *Deploy2runtimeSpec {
	this := Deploy2runtimeSpec{}
	return &this
}

// NewDeploy2runtimeSpecWithDefaults instantiates a new Deploy2runtimeSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploy2runtimeSpecWithDefaults() *Deploy2runtimeSpec {
	this := Deploy2runtimeSpec{}
	return &this
}

// GetClusters returns the Clusters field value if set, zero value otherwise.
func (o *Deploy2runtimeSpec) GetClusters() []string {
	if o == nil || utils.IsNil(o.clusters) {
		var ret []string
		return ret
	}
	return o.clusters
}

// GetClustersOk returns a tuple with the Clusters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deploy2runtimeSpec) GetClustersOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.clusters) {
		return nil, false
	}
	return o.clusters, true
}

// HasClusters returns a boolean if a field has been set.
func (o *Deploy2runtimeSpec) HasClusters() bool {
	if o != nil && !utils.IsNil(o.clusters) {
		return true
	}

	return false
}

// SetClusters gets a reference to the given []string and assigns it to the clusters field.
// clusters:  Declare the runtime clusters to apply, if empty, all runtime clusters will be used 

func (o *Deploy2runtimeSpec) Clusters(v []string) (*Deploy2runtimeSpec){
	o.clusters = v
return o
}

func (o Deploy2runtimeSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Deploy2runtimeSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.clusters) {
		toSerialize["clusters"] = o.clusters
	}
	return toSerialize, nil
}

type NullableDeploy2runtimeSpec struct {
	value *Deploy2runtimeSpec
	isSet bool
}

func (v NullableDeploy2runtimeSpec) Get() *Deploy2runtimeSpec {
	return v.value
}

func (v *NullableDeploy2runtimeSpec) Set(val *Deploy2runtimeSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploy2runtimeSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploy2runtimeSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploy2runtimeSpec(val *Deploy2runtimeSpec) *NullableDeploy2runtimeSpec {
	return &NullableDeploy2runtimeSpec{value: val, isSet: true}
}

func (v NullableDeploy2runtimeSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploy2runtimeSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

 

/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package init_container

import (
	"encoding/json"

	"vela-go-sdk/apis/utils"
)

// checks if the InitContainerSpecEnvValueFromSecretKeyRef type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &InitContainerSpecEnvValueFromSecretKeyRef{}

// InitContainerSpecEnvValueFromSecretKeyRef Selects a key of a secret in the pod's namespace
type InitContainerSpecEnvValueFromSecretKeyRef struct {
	// The key of the secret to select from. Must be a valid secret key
	key string `json:"key"`
	// The name of the secret in the pod's namespace to select from
	name string `json:"name"`
}

// InitContainerSpecEnvValueFromSecretKeyRefWith instantiates a new InitContainerSpecEnvValueFromSecretKeyRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func InitContainerSpecEnvValueFromSecretKeyRefWith(key string, name string) *InitContainerSpecEnvValueFromSecretKeyRef {
	this := InitContainerSpecEnvValueFromSecretKeyRef{}
	this.key = key
	this.name = name
	return &this
}

// NewInitContainerSpecEnvValueFromSecretKeyRef instantiates a new InitContainerSpecEnvValueFromSecretKeyRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInitContainerSpecEnvValueFromSecretKeyRef() *InitContainerSpecEnvValueFromSecretKeyRef {
	this := InitContainerSpecEnvValueFromSecretKeyRef{}
	return &this
}

// GetKey returns the Key field value
func (o *InitContainerSpecEnvValueFromSecretKeyRef) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *InitContainerSpecEnvValueFromSecretKeyRef) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.key, true
}

// Key sets field value
func (o *InitContainerSpecEnvValueFromSecretKeyRef) Key(v string) *InitContainerSpecEnvValueFromSecretKeyRef {
	o.key = v
	return o
}

// GetName returns the Name field value
func (o *InitContainerSpecEnvValueFromSecretKeyRef) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InitContainerSpecEnvValueFromSecretKeyRef) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.name, true
}

// Name sets field value
func (o *InitContainerSpecEnvValueFromSecretKeyRef) Name(v string) *InitContainerSpecEnvValueFromSecretKeyRef {
	o.name = v
	return o
}

func (o InitContainerSpecEnvValueFromSecretKeyRef) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InitContainerSpecEnvValueFromSecretKeyRef) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["key"] = o.key
	toSerialize["name"] = o.name
	return toSerialize, nil
}

type NullableInitContainerSpecEnvValueFromSecretKeyRef struct {
	value *InitContainerSpecEnvValueFromSecretKeyRef
	isSet bool
}

func (v NullableInitContainerSpecEnvValueFromSecretKeyRef) Get() *InitContainerSpecEnvValueFromSecretKeyRef {
	return v.value
}

func (v *NullableInitContainerSpecEnvValueFromSecretKeyRef) Set(val *InitContainerSpecEnvValueFromSecretKeyRef) {
	v.value = val
	v.isSet = true
}

func (v NullableInitContainerSpecEnvValueFromSecretKeyRef) IsSet() bool {
	return v.isSet
}

func (v *NullableInitContainerSpecEnvValueFromSecretKeyRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInitContainerSpecEnvValueFromSecretKeyRef(val *InitContainerSpecEnvValueFromSecretKeyRef) *NullableInitContainerSpecEnvValueFromSecretKeyRef {
	return &NullableInitContainerSpecEnvValueFromSecretKeyRef{value: val, isSet: true}
}

func (v NullableInitContainerSpecEnvValueFromSecretKeyRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInitContainerSpecEnvValueFromSecretKeyRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

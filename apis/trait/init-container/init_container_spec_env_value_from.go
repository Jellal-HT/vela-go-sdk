/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package init_container

import (
	"encoding/json"

	"vela-go-sdk/apis/utils"
)

// checks if the InitContainerSpecEnvValueFrom type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &InitContainerSpecEnvValueFrom{}

// InitContainerSpecEnvValueFrom Specifies a source the value of this var should come from
type InitContainerSpecEnvValueFrom struct {
	configMapKeyRef *InitContainerSpecEnvValueFromConfigMapKeyRef `json:"configMapKeyRef,omitempty"`
	secretKeyRef    *InitContainerSpecEnvValueFromSecretKeyRef    `json:"secretKeyRef,omitempty"`
}

// InitContainerSpecEnvValueFromWith instantiates a new InitContainerSpecEnvValueFrom object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func InitContainerSpecEnvValueFromWith() *InitContainerSpecEnvValueFrom {
	this := InitContainerSpecEnvValueFrom{}
	return &this
}

// NewInitContainerSpecEnvValueFrom instantiates a new InitContainerSpecEnvValueFrom object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInitContainerSpecEnvValueFrom() *InitContainerSpecEnvValueFrom {
	this := InitContainerSpecEnvValueFrom{}
	return &this
}

// GetConfigMapKeyRef returns the ConfigMapKeyRef field value if set, zero value otherwise.
func (o *InitContainerSpecEnvValueFrom) GetConfigMapKeyRef() InitContainerSpecEnvValueFromConfigMapKeyRef {
	if o == nil || utils.IsNil(o.configMapKeyRef) {
		var ret InitContainerSpecEnvValueFromConfigMapKeyRef
		return ret
	}
	return *o.configMapKeyRef
}

// GetConfigMapKeyRefOk returns a tuple with the ConfigMapKeyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitContainerSpecEnvValueFrom) GetConfigMapKeyRefOk() (*InitContainerSpecEnvValueFromConfigMapKeyRef, bool) {
	if o == nil || utils.IsNil(o.configMapKeyRef) {
		return nil, false
	}
	return o.configMapKeyRef, true
}

// HasConfigMapKeyRef returns a boolean if a field has been set.
func (o *InitContainerSpecEnvValueFrom) HasConfigMapKeyRef() bool {
	if o != nil && !utils.IsNil(o.configMapKeyRef) {
		return true
	}

	return false
}

// SetConfigMapKeyRef gets a reference to the given InitContainerSpecEnvValueFromConfigMapKeyRef and assigns it to the configMapKeyRef field.
// configMapKeyRef:

func (o *InitContainerSpecEnvValueFrom) ConfigMapKeyRef(v InitContainerSpecEnvValueFromConfigMapKeyRef) *InitContainerSpecEnvValueFrom {
	o.configMapKeyRef = &v
	return o
}

// GetSecretKeyRef returns the SecretKeyRef field value if set, zero value otherwise.
func (o *InitContainerSpecEnvValueFrom) GetSecretKeyRef() InitContainerSpecEnvValueFromSecretKeyRef {
	if o == nil || utils.IsNil(o.secretKeyRef) {
		var ret InitContainerSpecEnvValueFromSecretKeyRef
		return ret
	}
	return *o.secretKeyRef
}

// GetSecretKeyRefOk returns a tuple with the SecretKeyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitContainerSpecEnvValueFrom) GetSecretKeyRefOk() (*InitContainerSpecEnvValueFromSecretKeyRef, bool) {
	if o == nil || utils.IsNil(o.secretKeyRef) {
		return nil, false
	}
	return o.secretKeyRef, true
}

// HasSecretKeyRef returns a boolean if a field has been set.
func (o *InitContainerSpecEnvValueFrom) HasSecretKeyRef() bool {
	if o != nil && !utils.IsNil(o.secretKeyRef) {
		return true
	}

	return false
}

// SetSecretKeyRef gets a reference to the given InitContainerSpecEnvValueFromSecretKeyRef and assigns it to the secretKeyRef field.
// secretKeyRef:

func (o *InitContainerSpecEnvValueFrom) SecretKeyRef(v InitContainerSpecEnvValueFromSecretKeyRef) *InitContainerSpecEnvValueFrom {
	o.secretKeyRef = &v
	return o
}

func (o InitContainerSpecEnvValueFrom) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InitContainerSpecEnvValueFrom) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.configMapKeyRef) {
		toSerialize["configMapKeyRef"] = o.configMapKeyRef
	}
	if !utils.IsNil(o.secretKeyRef) {
		toSerialize["secretKeyRef"] = o.secretKeyRef
	}
	return toSerialize, nil
}

type NullableInitContainerSpecEnvValueFrom struct {
	value *InitContainerSpecEnvValueFrom
	isSet bool
}

func (v NullableInitContainerSpecEnvValueFrom) Get() *InitContainerSpecEnvValueFrom {
	return v.value
}

func (v *NullableInitContainerSpecEnvValueFrom) Set(val *InitContainerSpecEnvValueFrom) {
	v.value = val
	v.isSet = true
}

func (v NullableInitContainerSpecEnvValueFrom) IsSet() bool {
	return v.isSet
}

func (v *NullableInitContainerSpecEnvValueFrom) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInitContainerSpecEnvValueFrom(val *InitContainerSpecEnvValueFrom) *NullableInitContainerSpecEnvValueFrom {
	return &NullableInitContainerSpecEnvValueFrom{value: val, isSet: true}
}

func (v NullableInitContainerSpecEnvValueFrom) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInitContainerSpecEnvValueFrom) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package affinity

import (
	"encoding/json"

	"vela-go-sdk/apis/utils"
)

// checks if the AffinitySpecPodAffinityPreferred type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &AffinitySpecPodAffinityPreferred{}

// AffinitySpecPodAffinityPreferred struct for AffinitySpecPodAffinityPreferred
type AffinitySpecPodAffinityPreferred struct {
	podAffinityTerm PodAffinityTerm `json:"podAffinityTerm"`
	// Specify weight associated with matching the corresponding podAffinityTerm
	weight int32 `json:"weight"`
}

// NewAffinitySpecPodAffinityPreferredWith instantiates a new AffinitySpecPodAffinityPreferred object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAffinitySpecPodAffinityPreferredWith(podAffinityTerm PodAffinityTerm, weight int32) *AffinitySpecPodAffinityPreferred {
	this := AffinitySpecPodAffinityPreferred{}
	this.podAffinityTerm = podAffinityTerm
	this.weight = weight
	return &this
}

// NewAffinitySpecPodAffinityPreferred instantiates a new AffinitySpecPodAffinityPreferred object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAffinitySpecPodAffinityPreferred() *AffinitySpecPodAffinityPreferred {
	this := AffinitySpecPodAffinityPreferred{}
	return &this
}

// GetPodAffinityTerm returns the PodAffinityTerm field value
func (o *AffinitySpecPodAffinityPreferred) GetPodAffinityTerm() PodAffinityTerm {
	if o == nil {
		var ret PodAffinityTerm
		return ret
	}

	return o.podAffinityTerm
}

// GetPodAffinityTermOk returns a tuple with the PodAffinityTerm field value
// and a boolean to check if the value has been set.
func (o *AffinitySpecPodAffinityPreferred) GetPodAffinityTermOk() (*PodAffinityTerm, bool) {
	if o == nil {
		return nil, false
	}
	return &o.podAffinityTerm, true
}

// PodAffinityTerm sets field value
func (o *AffinitySpecPodAffinityPreferred) PodAffinityTerm(v PodAffinityTerm) *AffinitySpecPodAffinityPreferred {
	o.podAffinityTerm = v
	return o
}

// GetWeight returns the Weight field value
func (o *AffinitySpecPodAffinityPreferred) GetWeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.weight
}

// GetWeightOk returns a tuple with the Weight field value
// and a boolean to check if the value has been set.
func (o *AffinitySpecPodAffinityPreferred) GetWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.weight, true
}

// Weight sets field value
func (o *AffinitySpecPodAffinityPreferred) Weight(v int32) *AffinitySpecPodAffinityPreferred {
	o.weight = v
	return o
}

func (o AffinitySpecPodAffinityPreferred) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AffinitySpecPodAffinityPreferred) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["podAffinityTerm"] = o.podAffinityTerm
	toSerialize["weight"] = o.weight
	return toSerialize, nil
}

type NullableAffinitySpecPodAffinityPreferred struct {
	value *AffinitySpecPodAffinityPreferred
	isSet bool
}

func (v NullableAffinitySpecPodAffinityPreferred) Get() *AffinitySpecPodAffinityPreferred {
	return v.value
}

func (v *NullableAffinitySpecPodAffinityPreferred) Set(val *AffinitySpecPodAffinityPreferred) {
	v.value = val
	v.isSet = true
}

func (v NullableAffinitySpecPodAffinityPreferred) IsSet() bool {
	return v.isSet
}

func (v *NullableAffinitySpecPodAffinityPreferred) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAffinitySpecPodAffinityPreferred(val *AffinitySpecPodAffinityPreferred) *NullableAffinitySpecPodAffinityPreferred {
	return &NullableAffinitySpecPodAffinityPreferred{value: val, isSet: true}
}

func (v NullableAffinitySpecPodAffinityPreferred) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAffinitySpecPodAffinityPreferred) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package labels

import (
"encoding/json"
. "vela-go-sdk/api"
"vela-go-sdk/apis/utils"

"github.com/oam-dev/kubevela-core-api/apis/core.oam.dev/common"
"github.com/oam-dev/kubevela-core-api/pkg/oam/util"
)



    
    // checks if the LabelsSpec type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &LabelsSpec{}

// LabelsSpec struct for LabelsSpec
type LabelsSpec struct {
}

// NewLabelsSpec instantiates a new LabelsSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLabelsSpec() *LabelsSpec {
	this := LabelsSpec{}
	return &this
}

// NewLabelsSpecWithDefaults instantiates a new LabelsSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLabelsSpecWithDefaults() *LabelsSpec {
	this := LabelsSpec{}
	return &this
}

func (o LabelsSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LabelsSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	return toSerialize, nil
}

type NullableLabelsSpec struct {
	value *LabelsSpec
	isSet bool
}

func (v NullableLabelsSpec) Get() *LabelsSpec {
	return v.value
}

func (v *NullableLabelsSpec) Set(val *LabelsSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableLabelsSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableLabelsSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLabelsSpec(val *LabelsSpec) *NullableLabelsSpec {
	return &NullableLabelsSpec{value: val, isSet: true}
}

func (v NullableLabelsSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLabelsSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

 

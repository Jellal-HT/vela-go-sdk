/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package notification

import (
"encoding/json"
. "vela-go-sdk/api"
"vela-go-sdk/apis/utils"

"github.com/oam-dev/kubevela-core-api/apis/core.oam.dev/common"
"github.com/oam-dev/kubevela-core-api/pkg/oam/util"
)



    
    // checks if the FeedCard type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &FeedCard{}

// FeedCard struct for FeedCard
type FeedCard struct {
	links NullableString `json:"links"`
}

// NewFeedCard instantiates a new FeedCard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeedCard(links NullableString) *FeedCard {
	this := FeedCard{}
	this.links = links
	return &this
}

// NewFeedCardWithDefaults instantiates a new FeedCard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeedCardWithDefaults() *FeedCard {
	this := FeedCard{}
	return &this
}

// GetLinks returns the Links field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FeedCard) GetLinks() string {
	if o == nil || o.links.Get() == nil {
		var ret string
		return ret
	}

	return *o.links.Get()
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FeedCard) GetLinksOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.links.Get(), o.links.IsSet()
}

// Links sets field value
func (o *FeedCard) Links(v string) *FeedCard {
	o.links.Set(&v)
}

func (o FeedCard) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeedCard) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["links"] = o.links.Get()
	return toSerialize, nil
}

type NullableFeedCard struct {
	value *FeedCard
	isSet bool
}

func (v NullableFeedCard) Get() *FeedCard {
	return v.value
}

func (v *NullableFeedCard) Set(val *FeedCard) {
	v.value = val
	v.isSet = true
}

func (v NullableFeedCard) IsSet() bool {
	return v.isSet
}

func (v *NullableFeedCard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeedCard(val *FeedCard) *NullableFeedCard {
	return &NullableFeedCard{value: val, isSet: true}
}

func (v NullableFeedCard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeedCard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

 

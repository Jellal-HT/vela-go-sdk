/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package notification

import (
"encoding/json"
. "vela-go-sdk/api"
"vela-go-sdk/apis/utils"

"github.com/oam-dev/kubevela-core-api/apis/core.oam.dev/common"
"github.com/oam-dev/kubevela-core-api/pkg/oam/util"
)



    
    // checks if the At type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &At{}

// At struct for At
type At struct {
	atMobiles []string `json:"atMobiles,omitempty"`
	isAtAll *bool `json:"isAtAll,omitempty"`
}

// NewAt instantiates a new At object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAt() *At {
	this := At{}
	return &this
}

// NewAtWithDefaults instantiates a new At object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAtWithDefaults() *At {
	this := At{}
	return &this
}

// GetAtMobiles returns the AtMobiles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *At) GetAtMobiles() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.atMobiles
}

// GetAtMobilesOk returns a tuple with the AtMobiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *At) GetAtMobilesOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.atMobiles) {
		return nil, false
	}
	return o.atMobiles, true
}

// HasAtMobiles returns a boolean if a field has been set.
func (o *At) HasAtMobiles() bool {
	if o != nil && utils.IsNil(o.atMobiles) {
		return true
	}

	return false
}

// SetAtMobiles gets a reference to the given []string and assigns it to the atMobiles field.
// atMobiles: 

func (o *At) AtMobiles(v []string) (*At){
	o.atMobiles = v
return o
}

// GetIsAtAll returns the IsAtAll field value if set, zero value otherwise.
func (o *At) GetIsAtAll() bool {
	if o == nil || utils.IsNil(o.isAtAll) {
		var ret bool
		return ret
	}
	return *o.isAtAll
}

// GetIsAtAllOk returns a tuple with the IsAtAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *At) GetIsAtAllOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.isAtAll) {
		return nil, false
	}
	return o.isAtAll, true
}

// HasIsAtAll returns a boolean if a field has been set.
func (o *At) HasIsAtAll() bool {
	if o != nil && !utils.IsNil(o.isAtAll) {
		return true
	}

	return false
}

// SetIsAtAll gets a reference to the given bool and assigns it to the isAtAll field.
// isAtAll: 

func (o *At) IsAtAll(v bool) (*At){
	o.isAtAll = &v
return o
}

func (o At) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o At) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.atMobiles != nil {
		toSerialize["atMobiles"] = o.atMobiles
	}
	if !utils.IsNil(o.isAtAll) {
		toSerialize["isAtAll"] = o.isAtAll
	}
	return toSerialize, nil
}

type NullableAt struct {
	value *At
	isSet bool
}

func (v NullableAt) Get() *At {
	return v.value
}

func (v *NullableAt) Set(val *At) {
	v.value = val
	v.isSet = true
}

func (v NullableAt) IsSet() bool {
	return v.isSet
}

func (v *NullableAt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAt(val *At) *NullableAt {
	return &NullableAt{value: val, isSet: true}
}

func (v NullableAt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

 

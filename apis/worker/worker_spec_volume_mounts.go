/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package worker

import (
"encoding/json"
. "vela-go-sdk/api"
"vela-go-sdk/apis/utils"

"github.com/oam-dev/kubevela-core-api/apis/core.oam.dev/common"
"github.com/oam-dev/kubevela-core-api/pkg/oam/util"
)



    
    // checks if the WorkerSpecVolumeMounts type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &WorkerSpecVolumeMounts{}

// WorkerSpecVolumeMounts struct for WorkerSpecVolumeMounts
type WorkerSpecVolumeMounts struct {
	// Mount ConfigMap type volume
	configMap []WorkerSpecVolumeMountsConfigMap `json:"configMap,omitempty"`
	// Mount EmptyDir type volume
	emptyDir []WorkerSpecVolumeMountsEmptyDir `json:"emptyDir,omitempty"`
	// Mount HostPath type volume
	hostPath []WorkerSpecVolumeMountsHostPath `json:"hostPath,omitempty"`
	// Mount PVC type volume
	pvc []WorkerSpecVolumeMountsPvc `json:"pvc,omitempty"`
	// Mount Secret type volume
	secret []WorkerSpecVolumeMountsSecret `json:"secret,omitempty"`
}

// NewWorkerSpecVolumeMounts instantiates a new WorkerSpecVolumeMounts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkerSpecVolumeMounts() *WorkerSpecVolumeMounts {
	this := WorkerSpecVolumeMounts{}
	return &this
}

// NewWorkerSpecVolumeMountsWithDefaults instantiates a new WorkerSpecVolumeMounts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkerSpecVolumeMountsWithDefaults() *WorkerSpecVolumeMounts {
	this := WorkerSpecVolumeMounts{}
	return &this
}

// GetConfigMap returns the ConfigMap field value if set, zero value otherwise.
func (o *WorkerSpecVolumeMounts) GetConfigMap() []WorkerSpecVolumeMountsConfigMap {
	if o == nil || utils.IsNil(o.configMap) {
		var ret []WorkerSpecVolumeMountsConfigMap
		return ret
	}
	return o.configMap
}

// GetConfigMapOk returns a tuple with the ConfigMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerSpecVolumeMounts) GetConfigMapOk() ([]WorkerSpecVolumeMountsConfigMap, bool) {
	if o == nil || utils.IsNil(o.configMap) {
		return nil, false
	}
	return o.configMap, true
}

// HasConfigMap returns a boolean if a field has been set.
func (o *WorkerSpecVolumeMounts) HasConfigMap() bool {
	if o != nil && !utils.IsNil(o.configMap) {
		return true
	}

	return false
}

// SetConfigMap gets a reference to the given []WorkerSpecVolumeMountsConfigMap and assigns it to the configMap field.
// configMap:  Mount ConfigMap type volume 

func (o *WorkerSpecVolumeMounts) ConfigMap(v []WorkerSpecVolumeMountsConfigMap) (*WorkerSpecVolumeMounts){
	o.configMap = v
return o
}

// GetEmptyDir returns the EmptyDir field value if set, zero value otherwise.
func (o *WorkerSpecVolumeMounts) GetEmptyDir() []WorkerSpecVolumeMountsEmptyDir {
	if o == nil || utils.IsNil(o.emptyDir) {
		var ret []WorkerSpecVolumeMountsEmptyDir
		return ret
	}
	return o.emptyDir
}

// GetEmptyDirOk returns a tuple with the EmptyDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerSpecVolumeMounts) GetEmptyDirOk() ([]WorkerSpecVolumeMountsEmptyDir, bool) {
	if o == nil || utils.IsNil(o.emptyDir) {
		return nil, false
	}
	return o.emptyDir, true
}

// HasEmptyDir returns a boolean if a field has been set.
func (o *WorkerSpecVolumeMounts) HasEmptyDir() bool {
	if o != nil && !utils.IsNil(o.emptyDir) {
		return true
	}

	return false
}

// SetEmptyDir gets a reference to the given []WorkerSpecVolumeMountsEmptyDir and assigns it to the emptyDir field.
// emptyDir:  Mount EmptyDir type volume 

func (o *WorkerSpecVolumeMounts) EmptyDir(v []WorkerSpecVolumeMountsEmptyDir) (*WorkerSpecVolumeMounts){
	o.emptyDir = v
return o
}

// GetHostPath returns the HostPath field value if set, zero value otherwise.
func (o *WorkerSpecVolumeMounts) GetHostPath() []WorkerSpecVolumeMountsHostPath {
	if o == nil || utils.IsNil(o.hostPath) {
		var ret []WorkerSpecVolumeMountsHostPath
		return ret
	}
	return o.hostPath
}

// GetHostPathOk returns a tuple with the HostPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerSpecVolumeMounts) GetHostPathOk() ([]WorkerSpecVolumeMountsHostPath, bool) {
	if o == nil || utils.IsNil(o.hostPath) {
		return nil, false
	}
	return o.hostPath, true
}

// HasHostPath returns a boolean if a field has been set.
func (o *WorkerSpecVolumeMounts) HasHostPath() bool {
	if o != nil && !utils.IsNil(o.hostPath) {
		return true
	}

	return false
}

// SetHostPath gets a reference to the given []WorkerSpecVolumeMountsHostPath and assigns it to the hostPath field.
// hostPath:  Mount HostPath type volume 

func (o *WorkerSpecVolumeMounts) HostPath(v []WorkerSpecVolumeMountsHostPath) (*WorkerSpecVolumeMounts){
	o.hostPath = v
return o
}

// GetPvc returns the Pvc field value if set, zero value otherwise.
func (o *WorkerSpecVolumeMounts) GetPvc() []WorkerSpecVolumeMountsPvc {
	if o == nil || utils.IsNil(o.pvc) {
		var ret []WorkerSpecVolumeMountsPvc
		return ret
	}
	return o.pvc
}

// GetPvcOk returns a tuple with the Pvc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerSpecVolumeMounts) GetPvcOk() ([]WorkerSpecVolumeMountsPvc, bool) {
	if o == nil || utils.IsNil(o.pvc) {
		return nil, false
	}
	return o.pvc, true
}

// HasPvc returns a boolean if a field has been set.
func (o *WorkerSpecVolumeMounts) HasPvc() bool {
	if o != nil && !utils.IsNil(o.pvc) {
		return true
	}

	return false
}

// SetPvc gets a reference to the given []WorkerSpecVolumeMountsPvc and assigns it to the pvc field.
// pvc:  Mount PVC type volume 

func (o *WorkerSpecVolumeMounts) Pvc(v []WorkerSpecVolumeMountsPvc) (*WorkerSpecVolumeMounts){
	o.pvc = v
return o
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *WorkerSpecVolumeMounts) GetSecret() []WorkerSpecVolumeMountsSecret {
	if o == nil || utils.IsNil(o.secret) {
		var ret []WorkerSpecVolumeMountsSecret
		return ret
	}
	return o.secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerSpecVolumeMounts) GetSecretOk() ([]WorkerSpecVolumeMountsSecret, bool) {
	if o == nil || utils.IsNil(o.secret) {
		return nil, false
	}
	return o.secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *WorkerSpecVolumeMounts) HasSecret() bool {
	if o != nil && !utils.IsNil(o.secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given []WorkerSpecVolumeMountsSecret and assigns it to the secret field.
// secret:  Mount Secret type volume 

func (o *WorkerSpecVolumeMounts) Secret(v []WorkerSpecVolumeMountsSecret) (*WorkerSpecVolumeMounts){
	o.secret = v
return o
}

func (o WorkerSpecVolumeMounts) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkerSpecVolumeMounts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.configMap) {
		toSerialize["configMap"] = o.configMap
	}
	if !utils.IsNil(o.emptyDir) {
		toSerialize["emptyDir"] = o.emptyDir
	}
	if !utils.IsNil(o.hostPath) {
		toSerialize["hostPath"] = o.hostPath
	}
	if !utils.IsNil(o.pvc) {
		toSerialize["pvc"] = o.pvc
	}
	if !utils.IsNil(o.secret) {
		toSerialize["secret"] = o.secret
	}
	return toSerialize, nil
}

type NullableWorkerSpecVolumeMounts struct {
	value *WorkerSpecVolumeMounts
	isSet bool
}

func (v NullableWorkerSpecVolumeMounts) Get() *WorkerSpecVolumeMounts {
	return v.value
}

func (v *NullableWorkerSpecVolumeMounts) Set(val *WorkerSpecVolumeMounts) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkerSpecVolumeMounts) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkerSpecVolumeMounts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkerSpecVolumeMounts(val *WorkerSpecVolumeMounts) *NullableWorkerSpecVolumeMounts {
	return &NullableWorkerSpecVolumeMounts{value: val, isSet: true}
}

func (v NullableWorkerSpecVolumeMounts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkerSpecVolumeMounts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

 

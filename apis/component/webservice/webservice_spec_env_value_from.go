/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package webservice

import (
	"encoding/json"

	"vela-go-sdk/apis/utils"
)

// checks if the WebserviceSpecEnvValueFrom type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &WebserviceSpecEnvValueFrom{}

// WebserviceSpecEnvValueFrom Specifies a source the value of this var should come from
type WebserviceSpecEnvValueFrom struct {
	configMapKeyRef *WebserviceSpecEnvValueFromConfigMapKeyRef `json:"configMapKeyRef,omitempty"`
	secretKeyRef    *WebserviceSpecEnvValueFromSecretKeyRef    `json:"secretKeyRef,omitempty"`
}

// NewWebserviceSpecEnvValueFromWith instantiates a new WebserviceSpecEnvValueFrom object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebserviceSpecEnvValueFromWith() *WebserviceSpecEnvValueFrom {
	this := WebserviceSpecEnvValueFrom{}
	return &this
}

// NewWebserviceSpecEnvValueFrom instantiates a new WebserviceSpecEnvValueFrom object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebserviceSpecEnvValueFrom() *WebserviceSpecEnvValueFrom {
	this := WebserviceSpecEnvValueFrom{}
	return &this
}

// GetConfigMapKeyRef returns the ConfigMapKeyRef field value if set, zero value otherwise.
func (o *WebserviceSpecEnvValueFrom) GetConfigMapKeyRef() WebserviceSpecEnvValueFromConfigMapKeyRef {
	if o == nil || utils.IsNil(o.configMapKeyRef) {
		var ret WebserviceSpecEnvValueFromConfigMapKeyRef
		return ret
	}
	return *o.configMapKeyRef
}

// GetConfigMapKeyRefOk returns a tuple with the ConfigMapKeyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebserviceSpecEnvValueFrom) GetConfigMapKeyRefOk() (*WebserviceSpecEnvValueFromConfigMapKeyRef, bool) {
	if o == nil || utils.IsNil(o.configMapKeyRef) {
		return nil, false
	}
	return o.configMapKeyRef, true
}

// HasConfigMapKeyRef returns a boolean if a field has been set.
func (o *WebserviceSpecEnvValueFrom) HasConfigMapKeyRef() bool {
	if o != nil && !utils.IsNil(o.configMapKeyRef) {
		return true
	}

	return false
}

// ConfigMapKeyRef gets a reference to the given WebserviceSpecEnvValueFromConfigMapKeyRef and assigns it to the configMapKeyRef field.
// configMapKeyRef:
func (o *WebserviceSpecEnvValueFrom) ConfigMapKeyRef(v WebserviceSpecEnvValueFromConfigMapKeyRef) *WebserviceSpecEnvValueFrom {
	o.configMapKeyRef = &v
	return o
}

// GetSecretKeyRef returns the SecretKeyRef field value if set, zero value otherwise.
func (o *WebserviceSpecEnvValueFrom) GetSecretKeyRef() WebserviceSpecEnvValueFromSecretKeyRef {
	if o == nil || utils.IsNil(o.secretKeyRef) {
		var ret WebserviceSpecEnvValueFromSecretKeyRef
		return ret
	}
	return *o.secretKeyRef
}

// GetSecretKeyRefOk returns a tuple with the SecretKeyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebserviceSpecEnvValueFrom) GetSecretKeyRefOk() (*WebserviceSpecEnvValueFromSecretKeyRef, bool) {
	if o == nil || utils.IsNil(o.secretKeyRef) {
		return nil, false
	}
	return o.secretKeyRef, true
}

// HasSecretKeyRef returns a boolean if a field has been set.
func (o *WebserviceSpecEnvValueFrom) HasSecretKeyRef() bool {
	if o != nil && !utils.IsNil(o.secretKeyRef) {
		return true
	}

	return false
}

// SecretKeyRef gets a reference to the given WebserviceSpecEnvValueFromSecretKeyRef and assigns it to the secretKeyRef field.
// secretKeyRef:
func (o *WebserviceSpecEnvValueFrom) SecretKeyRef(v WebserviceSpecEnvValueFromSecretKeyRef) *WebserviceSpecEnvValueFrom {
	o.secretKeyRef = &v
	return o
}

func (o WebserviceSpecEnvValueFrom) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebserviceSpecEnvValueFrom) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.configMapKeyRef) {
		toSerialize["configMapKeyRef"] = o.configMapKeyRef
	}
	if !utils.IsNil(o.secretKeyRef) {
		toSerialize["secretKeyRef"] = o.secretKeyRef
	}
	return toSerialize, nil
}

type NullableWebserviceSpecEnvValueFrom struct {
	value *WebserviceSpecEnvValueFrom
	isSet bool
}

func (v NullableWebserviceSpecEnvValueFrom) Get() *WebserviceSpecEnvValueFrom {
	return v.value
}

func (v *NullableWebserviceSpecEnvValueFrom) Set(val *WebserviceSpecEnvValueFrom) {
	v.value = val
	v.isSet = true
}

func (v NullableWebserviceSpecEnvValueFrom) IsSet() bool {
	return v.isSet
}

func (v *NullableWebserviceSpecEnvValueFrom) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebserviceSpecEnvValueFrom(val *WebserviceSpecEnvValueFrom) *NullableWebserviceSpecEnvValueFrom {
	return &NullableWebserviceSpecEnvValueFrom{value: val, isSet: true}
}

func (v NullableWebserviceSpecEnvValueFrom) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebserviceSpecEnvValueFrom) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

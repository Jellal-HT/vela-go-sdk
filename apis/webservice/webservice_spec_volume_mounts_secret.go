/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package webservice

import (
"encoding/json"
. "vela-go-sdk/api"
"vela-go-sdk/apis/utils"

"github.com/oam-dev/kubevela-core-api/apis/core.oam.dev/common"
"github.com/oam-dev/kubevela-core-api/pkg/oam/util"
)



    
    // checks if the WebserviceSpecVolumeMountsSecret type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &WebserviceSpecVolumeMountsSecret{}

// WebserviceSpecVolumeMountsSecret struct for WebserviceSpecVolumeMountsSecret
type WebserviceSpecVolumeMountsSecret struct {
	defaultMode int32 `json:"defaultMode"`
	items []WebserviceSpecVolumeMountsConfigMapItems `json:"items,omitempty"`
	mountPath string `json:"mountPath"`
	name string `json:"name"`
	secretName string `json:"secretName"`
	subPath *string `json:"subPath,omitempty"`
}

// NewWebserviceSpecVolumeMountsSecret instantiates a new WebserviceSpecVolumeMountsSecret object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebserviceSpecVolumeMountsSecret(defaultMode int32, mountPath string, name string, secretName string) *WebserviceSpecVolumeMountsSecret {
	this := WebserviceSpecVolumeMountsSecret{}
	this.defaultMode = defaultMode
	this.mountPath = mountPath
	this.name = name
	this.secretName = secretName
	return &this
}

// NewWebserviceSpecVolumeMountsSecretWithDefaults instantiates a new WebserviceSpecVolumeMountsSecret object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebserviceSpecVolumeMountsSecretWithDefaults() *WebserviceSpecVolumeMountsSecret {
	this := WebserviceSpecVolumeMountsSecret{}
	var defaultMode int32 = 420
	this.defaultMode = defaultMode
	return &this
}

// GetDefaultMode returns the DefaultMode field value
func (o *WebserviceSpecVolumeMountsSecret) GetDefaultMode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.defaultMode
}

// GetDefaultModeOk returns a tuple with the DefaultMode field value
// and a boolean to check if the value has been set.
func (o *WebserviceSpecVolumeMountsSecret) GetDefaultModeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.defaultMode, true
}

// DefaultMode sets field value
func (o *WebserviceSpecVolumeMountsSecret) DefaultMode(v int32) *WebserviceSpecVolumeMountsSecret {
	o.defaultMode = v
    return o
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *WebserviceSpecVolumeMountsSecret) GetItems() []WebserviceSpecVolumeMountsConfigMapItems {
	if o == nil || utils.IsNil(o.items) {
		var ret []WebserviceSpecVolumeMountsConfigMapItems
		return ret
	}
	return o.items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebserviceSpecVolumeMountsSecret) GetItemsOk() ([]WebserviceSpecVolumeMountsConfigMapItems, bool) {
	if o == nil || utils.IsNil(o.items) {
		return nil, false
	}
	return o.items, true
}

// HasItems returns a boolean if a field has been set.
func (o *WebserviceSpecVolumeMountsSecret) HasItems() bool {
	if o != nil && !utils.IsNil(o.items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []WebserviceSpecVolumeMountsConfigMapItems and assigns it to the items field.
// items: 

func (o *WebserviceSpecVolumeMountsSecret) Items(v []WebserviceSpecVolumeMountsConfigMapItems) (*WebserviceSpecVolumeMountsSecret){
	o.items = v
return o
}

// GetMountPath returns the MountPath field value
func (o *WebserviceSpecVolumeMountsSecret) GetMountPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.mountPath
}

// GetMountPathOk returns a tuple with the MountPath field value
// and a boolean to check if the value has been set.
func (o *WebserviceSpecVolumeMountsSecret) GetMountPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.mountPath, true
}

// MountPath sets field value
func (o *WebserviceSpecVolumeMountsSecret) MountPath(v string) *WebserviceSpecVolumeMountsSecret {
	o.mountPath = v
    return o
}

// GetName returns the Name field value
func (o *WebserviceSpecVolumeMountsSecret) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WebserviceSpecVolumeMountsSecret) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.name, true
}

// Name sets field value
func (o *WebserviceSpecVolumeMountsSecret) Name(v string) *WebserviceSpecVolumeMountsSecret {
	o.name = v
    return o
}

// GetSecretName returns the SecretName field value
func (o *WebserviceSpecVolumeMountsSecret) GetSecretName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.secretName
}

// GetSecretNameOk returns a tuple with the SecretName field value
// and a boolean to check if the value has been set.
func (o *WebserviceSpecVolumeMountsSecret) GetSecretNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.secretName, true
}

// SecretName sets field value
func (o *WebserviceSpecVolumeMountsSecret) SecretName(v string) *WebserviceSpecVolumeMountsSecret {
	o.secretName = v
    return o
}

// GetSubPath returns the SubPath field value if set, zero value otherwise.
func (o *WebserviceSpecVolumeMountsSecret) GetSubPath() string {
	if o == nil || utils.IsNil(o.subPath) {
		var ret string
		return ret
	}
	return *o.subPath
}

// GetSubPathOk returns a tuple with the SubPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebserviceSpecVolumeMountsSecret) GetSubPathOk() (*string, bool) {
	if o == nil || utils.IsNil(o.subPath) {
		return nil, false
	}
	return o.subPath, true
}

// HasSubPath returns a boolean if a field has been set.
func (o *WebserviceSpecVolumeMountsSecret) HasSubPath() bool {
	if o != nil && !utils.IsNil(o.subPath) {
		return true
	}

	return false
}

// SetSubPath gets a reference to the given string and assigns it to the subPath field.
// subPath: 

func (o *WebserviceSpecVolumeMountsSecret) SubPath(v string) (*WebserviceSpecVolumeMountsSecret){
	o.subPath = &v
return o
}

func (o WebserviceSpecVolumeMountsSecret) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebserviceSpecVolumeMountsSecret) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["defaultMode"] = o.defaultMode
	if !utils.IsNil(o.items) {
		toSerialize["items"] = o.items
	}
	toSerialize["mountPath"] = o.mountPath
	toSerialize["name"] = o.name
	toSerialize["secretName"] = o.secretName
	if !utils.IsNil(o.subPath) {
		toSerialize["subPath"] = o.subPath
	}
	return toSerialize, nil
}

type NullableWebserviceSpecVolumeMountsSecret struct {
	value *WebserviceSpecVolumeMountsSecret
	isSet bool
}

func (v NullableWebserviceSpecVolumeMountsSecret) Get() *WebserviceSpecVolumeMountsSecret {
	return v.value
}

func (v *NullableWebserviceSpecVolumeMountsSecret) Set(val *WebserviceSpecVolumeMountsSecret) {
	v.value = val
	v.isSet = true
}

func (v NullableWebserviceSpecVolumeMountsSecret) IsSet() bool {
	return v.isSet
}

func (v *NullableWebserviceSpecVolumeMountsSecret) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebserviceSpecVolumeMountsSecret(val *WebserviceSpecVolumeMountsSecret) *NullableWebserviceSpecVolumeMountsSecret {
	return &NullableWebserviceSpecVolumeMountsSecret{value: val, isSet: true}
}

func (v NullableWebserviceSpecVolumeMountsSecret) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebserviceSpecVolumeMountsSecret) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

 

/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package webservice

import (
"encoding/json"
. "vela-go-sdk/api"
"vela-go-sdk/apis/utils"

"github.com/oam-dev/kubevela-core-api/apis/core.oam.dev/common"
"github.com/oam-dev/kubevela-core-api/pkg/oam/util"
)



    
    // checks if the WebserviceSpecVolumeMounts type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &WebserviceSpecVolumeMounts{}

// WebserviceSpecVolumeMounts struct for WebserviceSpecVolumeMounts
type WebserviceSpecVolumeMounts struct {
	// Mount ConfigMap type volume
	configMap []WebserviceSpecVolumeMountsConfigMap `json:"configMap,omitempty"`
	// Mount EmptyDir type volume
	emptyDir []WebserviceSpecVolumeMountsEmptyDir `json:"emptyDir,omitempty"`
	// Mount HostPath type volume
	hostPath []WebserviceSpecVolumeMountsHostPath `json:"hostPath,omitempty"`
	// Mount PVC type volume
	pvc []WebserviceSpecVolumeMountsPvc `json:"pvc,omitempty"`
	// Mount Secret type volume
	secret []WebserviceSpecVolumeMountsSecret `json:"secret,omitempty"`
}

// NewWebserviceSpecVolumeMounts instantiates a new WebserviceSpecVolumeMounts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebserviceSpecVolumeMounts() *WebserviceSpecVolumeMounts {
	this := WebserviceSpecVolumeMounts{}
	return &this
}

// NewWebserviceSpecVolumeMountsWithDefaults instantiates a new WebserviceSpecVolumeMounts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebserviceSpecVolumeMountsWithDefaults() *WebserviceSpecVolumeMounts {
	this := WebserviceSpecVolumeMounts{}
	return &this
}

// GetConfigMap returns the ConfigMap field value if set, zero value otherwise.
func (o *WebserviceSpecVolumeMounts) GetConfigMap() []WebserviceSpecVolumeMountsConfigMap {
	if o == nil || utils.IsNil(o.configMap) {
		var ret []WebserviceSpecVolumeMountsConfigMap
		return ret
	}
	return o.configMap
}

// GetConfigMapOk returns a tuple with the ConfigMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebserviceSpecVolumeMounts) GetConfigMapOk() ([]WebserviceSpecVolumeMountsConfigMap, bool) {
	if o == nil || utils.IsNil(o.configMap) {
		return nil, false
	}
	return o.configMap, true
}

// HasConfigMap returns a boolean if a field has been set.
func (o *WebserviceSpecVolumeMounts) HasConfigMap() bool {
	if o != nil && !utils.IsNil(o.configMap) {
		return true
	}

	return false
}

// SetConfigMap gets a reference to the given []WebserviceSpecVolumeMountsConfigMap and assigns it to the configMap field.
// configMap:  Mount ConfigMap type volume 

func (o *WebserviceSpecVolumeMounts) ConfigMap(v []WebserviceSpecVolumeMountsConfigMap) (*WebserviceSpecVolumeMounts){
	o.configMap = v
return o
}

// GetEmptyDir returns the EmptyDir field value if set, zero value otherwise.
func (o *WebserviceSpecVolumeMounts) GetEmptyDir() []WebserviceSpecVolumeMountsEmptyDir {
	if o == nil || utils.IsNil(o.emptyDir) {
		var ret []WebserviceSpecVolumeMountsEmptyDir
		return ret
	}
	return o.emptyDir
}

// GetEmptyDirOk returns a tuple with the EmptyDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebserviceSpecVolumeMounts) GetEmptyDirOk() ([]WebserviceSpecVolumeMountsEmptyDir, bool) {
	if o == nil || utils.IsNil(o.emptyDir) {
		return nil, false
	}
	return o.emptyDir, true
}

// HasEmptyDir returns a boolean if a field has been set.
func (o *WebserviceSpecVolumeMounts) HasEmptyDir() bool {
	if o != nil && !utils.IsNil(o.emptyDir) {
		return true
	}

	return false
}

// SetEmptyDir gets a reference to the given []WebserviceSpecVolumeMountsEmptyDir and assigns it to the emptyDir field.
// emptyDir:  Mount EmptyDir type volume 

func (o *WebserviceSpecVolumeMounts) EmptyDir(v []WebserviceSpecVolumeMountsEmptyDir) (*WebserviceSpecVolumeMounts){
	o.emptyDir = v
return o
}

// GetHostPath returns the HostPath field value if set, zero value otherwise.
func (o *WebserviceSpecVolumeMounts) GetHostPath() []WebserviceSpecVolumeMountsHostPath {
	if o == nil || utils.IsNil(o.hostPath) {
		var ret []WebserviceSpecVolumeMountsHostPath
		return ret
	}
	return o.hostPath
}

// GetHostPathOk returns a tuple with the HostPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebserviceSpecVolumeMounts) GetHostPathOk() ([]WebserviceSpecVolumeMountsHostPath, bool) {
	if o == nil || utils.IsNil(o.hostPath) {
		return nil, false
	}
	return o.hostPath, true
}

// HasHostPath returns a boolean if a field has been set.
func (o *WebserviceSpecVolumeMounts) HasHostPath() bool {
	if o != nil && !utils.IsNil(o.hostPath) {
		return true
	}

	return false
}

// SetHostPath gets a reference to the given []WebserviceSpecVolumeMountsHostPath and assigns it to the hostPath field.
// hostPath:  Mount HostPath type volume 

func (o *WebserviceSpecVolumeMounts) HostPath(v []WebserviceSpecVolumeMountsHostPath) (*WebserviceSpecVolumeMounts){
	o.hostPath = v
return o
}

// GetPvc returns the Pvc field value if set, zero value otherwise.
func (o *WebserviceSpecVolumeMounts) GetPvc() []WebserviceSpecVolumeMountsPvc {
	if o == nil || utils.IsNil(o.pvc) {
		var ret []WebserviceSpecVolumeMountsPvc
		return ret
	}
	return o.pvc
}

// GetPvcOk returns a tuple with the Pvc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebserviceSpecVolumeMounts) GetPvcOk() ([]WebserviceSpecVolumeMountsPvc, bool) {
	if o == nil || utils.IsNil(o.pvc) {
		return nil, false
	}
	return o.pvc, true
}

// HasPvc returns a boolean if a field has been set.
func (o *WebserviceSpecVolumeMounts) HasPvc() bool {
	if o != nil && !utils.IsNil(o.pvc) {
		return true
	}

	return false
}

// SetPvc gets a reference to the given []WebserviceSpecVolumeMountsPvc and assigns it to the pvc field.
// pvc:  Mount PVC type volume 

func (o *WebserviceSpecVolumeMounts) Pvc(v []WebserviceSpecVolumeMountsPvc) (*WebserviceSpecVolumeMounts){
	o.pvc = v
return o
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *WebserviceSpecVolumeMounts) GetSecret() []WebserviceSpecVolumeMountsSecret {
	if o == nil || utils.IsNil(o.secret) {
		var ret []WebserviceSpecVolumeMountsSecret
		return ret
	}
	return o.secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebserviceSpecVolumeMounts) GetSecretOk() ([]WebserviceSpecVolumeMountsSecret, bool) {
	if o == nil || utils.IsNil(o.secret) {
		return nil, false
	}
	return o.secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *WebserviceSpecVolumeMounts) HasSecret() bool {
	if o != nil && !utils.IsNil(o.secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given []WebserviceSpecVolumeMountsSecret and assigns it to the secret field.
// secret:  Mount Secret type volume 

func (o *WebserviceSpecVolumeMounts) Secret(v []WebserviceSpecVolumeMountsSecret) (*WebserviceSpecVolumeMounts){
	o.secret = v
return o
}

func (o WebserviceSpecVolumeMounts) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebserviceSpecVolumeMounts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.configMap) {
		toSerialize["configMap"] = o.configMap
	}
	if !utils.IsNil(o.emptyDir) {
		toSerialize["emptyDir"] = o.emptyDir
	}
	if !utils.IsNil(o.hostPath) {
		toSerialize["hostPath"] = o.hostPath
	}
	if !utils.IsNil(o.pvc) {
		toSerialize["pvc"] = o.pvc
	}
	if !utils.IsNil(o.secret) {
		toSerialize["secret"] = o.secret
	}
	return toSerialize, nil
}

type NullableWebserviceSpecVolumeMounts struct {
	value *WebserviceSpecVolumeMounts
	isSet bool
}

func (v NullableWebserviceSpecVolumeMounts) Get() *WebserviceSpecVolumeMounts {
	return v.value
}

func (v *NullableWebserviceSpecVolumeMounts) Set(val *WebserviceSpecVolumeMounts) {
	v.value = val
	v.isSet = true
}

func (v NullableWebserviceSpecVolumeMounts) IsSet() bool {
	return v.isSet
}

func (v *NullableWebserviceSpecVolumeMounts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebserviceSpecVolumeMounts(val *WebserviceSpecVolumeMounts) *NullableWebserviceSpecVolumeMounts {
	return &NullableWebserviceSpecVolumeMounts{value: val, isSet: true}
}

func (v NullableWebserviceSpecVolumeMounts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebserviceSpecVolumeMounts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

 

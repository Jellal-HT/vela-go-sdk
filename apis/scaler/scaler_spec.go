/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package scaler

import (
"encoding/json"
. "vela-go-sdk/api"
"vela-go-sdk/apis/utils"

"github.com/oam-dev/kubevela-core-api/apis/core.oam.dev/common"
"github.com/oam-dev/kubevela-core-api/pkg/oam/util"
)



    
    // checks if the ScalerSpec type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ScalerSpec{}

// ScalerSpec struct for ScalerSpec
type ScalerSpec struct {
	// Specify the number of workload
	replicas int32 `json:"replicas"`
}

// NewScalerSpec instantiates a new ScalerSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScalerSpec(replicas int32) *ScalerSpec {
	this := ScalerSpec{}
	this.replicas = replicas
	return &this
}

// NewScalerSpecWithDefaults instantiates a new ScalerSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScalerSpecWithDefaults() *ScalerSpec {
	this := ScalerSpec{}
	var replicas int32 = 1
	this.replicas = replicas
	return &this
}

// GetReplicas returns the Replicas field value
func (o *ScalerSpec) GetReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.replicas
}

// GetReplicasOk returns a tuple with the Replicas field value
// and a boolean to check if the value has been set.
func (o *ScalerSpec) GetReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.replicas, true
}

// Replicas sets field value
func (o *ScalerSpec) Replicas(v int32) *ScalerSpec {
	o.replicas = v
    return o
}

func (o ScalerSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScalerSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["replicas"] = o.replicas
	return toSerialize, nil
}

type NullableScalerSpec struct {
	value *ScalerSpec
	isSet bool
}

func (v NullableScalerSpec) Get() *ScalerSpec {
	return v.value
}

func (v *NullableScalerSpec) Set(val *ScalerSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableScalerSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableScalerSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScalerSpec(val *ScalerSpec) *NullableScalerSpec {
	return &NullableScalerSpec{value: val, isSet: true}
}

func (v NullableScalerSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScalerSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

 

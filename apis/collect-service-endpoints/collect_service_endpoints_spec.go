/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package collect_service_endpoints

import (
"encoding/json"
. "vela-go-sdk/api"
"vela-go-sdk/apis/utils"

"github.com/oam-dev/kubevela-core-api/apis/core.oam.dev/common"
"github.com/oam-dev/kubevela-core-api/pkg/oam/util"
)



    
    // checks if the CollectServiceEndpointsSpec type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CollectServiceEndpointsSpec{}

// CollectServiceEndpointsSpec struct for CollectServiceEndpointsSpec
type CollectServiceEndpointsSpec struct {
	// Filter the component of the endpoints
	components []string `json:"components,omitempty"`
	// Specify the name of the application
	name *string `json:"name,omitempty"`
	// Specify the namespace of the application
	namespace *string `json:"namespace,omitempty"`
	// Filter the endpoint that are only outer
	outer *bool `json:"outer,omitempty"`
	// Filter the port of the endpoints
	port *int32 `json:"port,omitempty"`
	// Filter the port name of the endpoints
	portName *string `json:"portName,omitempty"`
	// The protocal of endpoint url
	protocal string `json:"protocal"`
}

// NewCollectServiceEndpointsSpec instantiates a new CollectServiceEndpointsSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectServiceEndpointsSpec(protocal string) *CollectServiceEndpointsSpec {
	this := CollectServiceEndpointsSpec{}
	this.protocal = protocal
	return &this
}

// NewCollectServiceEndpointsSpecWithDefaults instantiates a new CollectServiceEndpointsSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectServiceEndpointsSpecWithDefaults() *CollectServiceEndpointsSpec {
	this := CollectServiceEndpointsSpec{}
	var protocal string = "http"
	this.protocal = protocal
	return &this
}

// GetComponents returns the Components field value if set, zero value otherwise.
func (o *CollectServiceEndpointsSpec) GetComponents() []string {
	if o == nil || utils.IsNil(o.components) {
		var ret []string
		return ret
	}
	return o.components
}

// GetComponentsOk returns a tuple with the Components field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectServiceEndpointsSpec) GetComponentsOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.components) {
		return nil, false
	}
	return o.components, true
}

// HasComponents returns a boolean if a field has been set.
func (o *CollectServiceEndpointsSpec) HasComponents() bool {
	if o != nil && !utils.IsNil(o.components) {
		return true
	}

	return false
}

// SetComponents gets a reference to the given []string and assigns it to the components field.
// components:  Filter the component of the endpoints 

func (o *CollectServiceEndpointsSpec) Components(v []string) (*CollectServiceEndpointsSpec){
	o.components = v
return o
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CollectServiceEndpointsSpec) GetName() string {
	if o == nil || utils.IsNil(o.name) {
		var ret string
		return ret
	}
	return *o.name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectServiceEndpointsSpec) GetNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.name) {
		return nil, false
	}
	return o.name, true
}

// HasName returns a boolean if a field has been set.
func (o *CollectServiceEndpointsSpec) HasName() bool {
	if o != nil && !utils.IsNil(o.name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the name field.
// name:  Specify the name of the application 

func (o *CollectServiceEndpointsSpec) Name(v string) (*CollectServiceEndpointsSpec){
	o.name = &v
return o
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *CollectServiceEndpointsSpec) GetNamespace() string {
	if o == nil || utils.IsNil(o.namespace) {
		var ret string
		return ret
	}
	return *o.namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectServiceEndpointsSpec) GetNamespaceOk() (*string, bool) {
	if o == nil || utils.IsNil(o.namespace) {
		return nil, false
	}
	return o.namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *CollectServiceEndpointsSpec) HasNamespace() bool {
	if o != nil && !utils.IsNil(o.namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the namespace field.
// namespace:  Specify the namespace of the application 

func (o *CollectServiceEndpointsSpec) Namespace(v string) (*CollectServiceEndpointsSpec){
	o.namespace = &v
return o
}

// GetOuter returns the Outer field value if set, zero value otherwise.
func (o *CollectServiceEndpointsSpec) GetOuter() bool {
	if o == nil || utils.IsNil(o.outer) {
		var ret bool
		return ret
	}
	return *o.outer
}

// GetOuterOk returns a tuple with the Outer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectServiceEndpointsSpec) GetOuterOk() (*bool, bool) {
	if o == nil || utils.IsNil(o.outer) {
		return nil, false
	}
	return o.outer, true
}

// HasOuter returns a boolean if a field has been set.
func (o *CollectServiceEndpointsSpec) HasOuter() bool {
	if o != nil && !utils.IsNil(o.outer) {
		return true
	}

	return false
}

// SetOuter gets a reference to the given bool and assigns it to the outer field.
// outer:  Filter the endpoint that are only outer 

func (o *CollectServiceEndpointsSpec) Outer(v bool) (*CollectServiceEndpointsSpec){
	o.outer = &v
return o
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *CollectServiceEndpointsSpec) GetPort() int32 {
	if o == nil || utils.IsNil(o.port) {
		var ret int32
		return ret
	}
	return *o.port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectServiceEndpointsSpec) GetPortOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.port) {
		return nil, false
	}
	return o.port, true
}

// HasPort returns a boolean if a field has been set.
func (o *CollectServiceEndpointsSpec) HasPort() bool {
	if o != nil && !utils.IsNil(o.port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the port field.
// port:  Filter the port of the endpoints 

func (o *CollectServiceEndpointsSpec) Port(v int32) (*CollectServiceEndpointsSpec){
	o.port = &v
return o
}

// GetPortName returns the PortName field value if set, zero value otherwise.
func (o *CollectServiceEndpointsSpec) GetPortName() string {
	if o == nil || utils.IsNil(o.portName) {
		var ret string
		return ret
	}
	return *o.portName
}

// GetPortNameOk returns a tuple with the PortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectServiceEndpointsSpec) GetPortNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.portName) {
		return nil, false
	}
	return o.portName, true
}

// HasPortName returns a boolean if a field has been set.
func (o *CollectServiceEndpointsSpec) HasPortName() bool {
	if o != nil && !utils.IsNil(o.portName) {
		return true
	}

	return false
}

// SetPortName gets a reference to the given string and assigns it to the portName field.
// portName:  Filter the port name of the endpoints 

func (o *CollectServiceEndpointsSpec) PortName(v string) (*CollectServiceEndpointsSpec){
	o.portName = &v
return o
}

// GetProtocal returns the Protocal field value
func (o *CollectServiceEndpointsSpec) GetProtocal() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.protocal
}

// GetProtocalOk returns a tuple with the Protocal field value
// and a boolean to check if the value has been set.
func (o *CollectServiceEndpointsSpec) GetProtocalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.protocal, true
}

// Protocal sets field value
func (o *CollectServiceEndpointsSpec) Protocal(v string) *CollectServiceEndpointsSpec {
	o.protocal = v
    return o
}

func (o CollectServiceEndpointsSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CollectServiceEndpointsSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.components) {
		toSerialize["components"] = o.components
	}
	if !utils.IsNil(o.name) {
		toSerialize["name"] = o.name
	}
	if !utils.IsNil(o.namespace) {
		toSerialize["namespace"] = o.namespace
	}
	if !utils.IsNil(o.outer) {
		toSerialize["outer"] = o.outer
	}
	if !utils.IsNil(o.port) {
		toSerialize["port"] = o.port
	}
	if !utils.IsNil(o.portName) {
		toSerialize["portName"] = o.portName
	}
	toSerialize["protocal"] = o.protocal
	return toSerialize, nil
}

type NullableCollectServiceEndpointsSpec struct {
	value *CollectServiceEndpointsSpec
	isSet bool
}

func (v NullableCollectServiceEndpointsSpec) Get() *CollectServiceEndpointsSpec {
	return v.value
}

func (v *NullableCollectServiceEndpointsSpec) Set(val *CollectServiceEndpointsSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectServiceEndpointsSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectServiceEndpointsSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectServiceEndpointsSpec(val *CollectServiceEndpointsSpec) *NullableCollectServiceEndpointsSpec {
	return &NullableCollectServiceEndpointsSpec{value: val, isSet: true}
}

func (v NullableCollectServiceEndpointsSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectServiceEndpointsSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

 

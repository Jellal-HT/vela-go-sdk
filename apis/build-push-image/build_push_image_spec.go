/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package build_push_image

import (
"encoding/json"
. "vela-go-sdk/api"
"vela-go-sdk/apis/utils"

"github.com/oam-dev/kubevela-core-api/apis/core.oam.dev/common"
"github.com/oam-dev/kubevela-core-api/pkg/oam/util"
)



    
    // checks if the BuildPushImageSpec type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &BuildPushImageSpec{}

// BuildPushImageSpec struct for BuildPushImageSpec
type BuildPushImageSpec struct {
	// Specify the build args
	buildArgs []string `json:"buildArgs,omitempty"`
	context Context `json:"context"`
	credentials *Credentials `json:"credentials,omitempty"`
	// Specify the dockerfile
	dockerfile string `json:"dockerfile"`
	// Specify the image
	image string `json:"image"`
	// Specify the kaniko executor image, default to oamdev/kaniko-executor:v1.9.1
	kanikoExecutor string `json:"kanikoExecutor"`
	// Specify the platform to build
	platform *string `json:"platform,omitempty"`
	// Specify the verbosity level
	verbosity string `json:"verbosity"`
}

// NewBuildPushImageSpec instantiates a new BuildPushImageSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuildPushImageSpec(context Context, dockerfile string, image string, kanikoExecutor string, verbosity string) *BuildPushImageSpec {
	this := BuildPushImageSpec{}
	this.context = context
	this.dockerfile = dockerfile
	this.image = image
	this.kanikoExecutor = kanikoExecutor
	this.verbosity = verbosity
	return &this
}

// NewBuildPushImageSpecWithDefaults instantiates a new BuildPushImageSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuildPushImageSpecWithDefaults() *BuildPushImageSpec {
	this := BuildPushImageSpec{}
	var dockerfile string = "./Dockerfile"
	this.dockerfile = dockerfile
	var kanikoExecutor string = "oamdev/kaniko-executor:v1.9.1"
	this.kanikoExecutor = kanikoExecutor
	var verbosity string = "info"
	this.verbosity = verbosity
	return &this
}

// GetBuildArgs returns the BuildArgs field value if set, zero value otherwise.
func (o *BuildPushImageSpec) GetBuildArgs() []string {
	if o == nil || utils.IsNil(o.buildArgs) {
		var ret []string
		return ret
	}
	return o.buildArgs
}

// GetBuildArgsOk returns a tuple with the BuildArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildPushImageSpec) GetBuildArgsOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.buildArgs) {
		return nil, false
	}
	return o.buildArgs, true
}

// HasBuildArgs returns a boolean if a field has been set.
func (o *BuildPushImageSpec) HasBuildArgs() bool {
	if o != nil && !utils.IsNil(o.buildArgs) {
		return true
	}

	return false
}

// SetBuildArgs gets a reference to the given []string and assigns it to the buildArgs field.
// buildArgs:  Specify the build args 

func (o *BuildPushImageSpec) BuildArgs(v []string) (*BuildPushImageSpec){
	o.buildArgs = v
return o
}

// GetContext returns the Context field value
func (o *BuildPushImageSpec) GetContext() Context {
	if o == nil {
		var ret Context
		return ret
	}

	return o.context
}

// GetContextOk returns a tuple with the Context field value
// and a boolean to check if the value has been set.
func (o *BuildPushImageSpec) GetContextOk() (*Context, bool) {
	if o == nil {
		return nil, false
	}
	return &o.context, true
}

// Context sets field value
func (o *BuildPushImageSpec) Context(v Context) *BuildPushImageSpec {
	o.context = v
    return o
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *BuildPushImageSpec) GetCredentials() Credentials {
	if o == nil || utils.IsNil(o.credentials) {
		var ret Credentials
		return ret
	}
	return *o.credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildPushImageSpec) GetCredentialsOk() (*Credentials, bool) {
	if o == nil || utils.IsNil(o.credentials) {
		return nil, false
	}
	return o.credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *BuildPushImageSpec) HasCredentials() bool {
	if o != nil && !utils.IsNil(o.credentials) {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given Credentials and assigns it to the credentials field.
// credentials: 

func (o *BuildPushImageSpec) Credentials(v Credentials) (*BuildPushImageSpec){
	o.credentials = &v
return o
}

// GetDockerfile returns the Dockerfile field value
func (o *BuildPushImageSpec) GetDockerfile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.dockerfile
}

// GetDockerfileOk returns a tuple with the Dockerfile field value
// and a boolean to check if the value has been set.
func (o *BuildPushImageSpec) GetDockerfileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.dockerfile, true
}

// Dockerfile sets field value
func (o *BuildPushImageSpec) Dockerfile(v string) *BuildPushImageSpec {
	o.dockerfile = v
    return o
}

// GetImage returns the Image field value
func (o *BuildPushImageSpec) GetImage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *BuildPushImageSpec) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.image, true
}

// Image sets field value
func (o *BuildPushImageSpec) Image(v string) *BuildPushImageSpec {
	o.image = v
    return o
}

// GetKanikoExecutor returns the KanikoExecutor field value
func (o *BuildPushImageSpec) GetKanikoExecutor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.kanikoExecutor
}

// GetKanikoExecutorOk returns a tuple with the KanikoExecutor field value
// and a boolean to check if the value has been set.
func (o *BuildPushImageSpec) GetKanikoExecutorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.kanikoExecutor, true
}

// KanikoExecutor sets field value
func (o *BuildPushImageSpec) KanikoExecutor(v string) *BuildPushImageSpec {
	o.kanikoExecutor = v
    return o
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *BuildPushImageSpec) GetPlatform() string {
	if o == nil || utils.IsNil(o.platform) {
		var ret string
		return ret
	}
	return *o.platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildPushImageSpec) GetPlatformOk() (*string, bool) {
	if o == nil || utils.IsNil(o.platform) {
		return nil, false
	}
	return o.platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *BuildPushImageSpec) HasPlatform() bool {
	if o != nil && !utils.IsNil(o.platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the platform field.
// platform:  Specify the platform to build 

func (o *BuildPushImageSpec) Platform(v string) (*BuildPushImageSpec){
	o.platform = &v
return o
}

// GetVerbosity returns the Verbosity field value
func (o *BuildPushImageSpec) GetVerbosity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.verbosity
}

// GetVerbosityOk returns a tuple with the Verbosity field value
// and a boolean to check if the value has been set.
func (o *BuildPushImageSpec) GetVerbosityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.verbosity, true
}

// Verbosity sets field value
func (o *BuildPushImageSpec) Verbosity(v string) *BuildPushImageSpec {
	o.verbosity = v
    return o
}

func (o BuildPushImageSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BuildPushImageSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.buildArgs) {
		toSerialize["buildArgs"] = o.buildArgs
	}
	toSerialize["context"] = o.context
	if !utils.IsNil(o.credentials) {
		toSerialize["credentials"] = o.credentials
	}
	toSerialize["dockerfile"] = o.dockerfile
	toSerialize["image"] = o.image
	toSerialize["kanikoExecutor"] = o.kanikoExecutor
	if !utils.IsNil(o.platform) {
		toSerialize["platform"] = o.platform
	}
	toSerialize["verbosity"] = o.verbosity
	return toSerialize, nil
}

type NullableBuildPushImageSpec struct {
	value *BuildPushImageSpec
	isSet bool
}

func (v NullableBuildPushImageSpec) Get() *BuildPushImageSpec {
	return v.value
}

func (v *NullableBuildPushImageSpec) Set(val *BuildPushImageSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableBuildPushImageSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableBuildPushImageSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuildPushImageSpec(val *BuildPushImageSpec) *NullableBuildPushImageSpec {
	return &NullableBuildPushImageSpec{value: val, isSet: true}
}

func (v NullableBuildPushImageSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuildPushImageSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

 

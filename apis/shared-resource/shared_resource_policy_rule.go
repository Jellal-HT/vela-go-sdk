/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shared_resource

import (
"encoding/json"
. "vela-go-sdk/api"
"vela-go-sdk/apis/utils"

"github.com/oam-dev/kubevela-core-api/apis/core.oam.dev/common"
"github.com/oam-dev/kubevela-core-api/pkg/oam/util"
)



    
    // checks if the SharedResourcePolicyRule type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &SharedResourcePolicyRule{}

// SharedResourcePolicyRule struct for SharedResourcePolicyRule
type SharedResourcePolicyRule struct {
	// Specify how to select the targets of the rule
	selector []ResourcePolicyRuleSelector `json:"selector"`
}

// NewSharedResourcePolicyRule instantiates a new SharedResourcePolicyRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSharedResourcePolicyRule(selector []ResourcePolicyRuleSelector) *SharedResourcePolicyRule {
	this := SharedResourcePolicyRule{}
	this.selector = selector
	return &this
}

// NewSharedResourcePolicyRuleWithDefaults instantiates a new SharedResourcePolicyRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSharedResourcePolicyRuleWithDefaults() *SharedResourcePolicyRule {
	this := SharedResourcePolicyRule{}
	return &this
}

// GetSelector returns the Selector field value
func (o *SharedResourcePolicyRule) GetSelector() []ResourcePolicyRuleSelector {
	if o == nil {
		var ret []ResourcePolicyRuleSelector
		return ret
	}

	return o.selector
}

// GetSelectorOk returns a tuple with the Selector field value
// and a boolean to check if the value has been set.
func (o *SharedResourcePolicyRule) GetSelectorOk() ([]ResourcePolicyRuleSelector, bool) {
	if o == nil {
		return nil, false
	}
	return o.selector, true
}

// Selector sets field value
func (o *SharedResourcePolicyRule) Selector(v []ResourcePolicyRuleSelector) *SharedResourcePolicyRule {
	o.selector = v
    return o
}

func (o SharedResourcePolicyRule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SharedResourcePolicyRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["selector"] = o.selector
	return toSerialize, nil
}

type NullableSharedResourcePolicyRule struct {
	value *SharedResourcePolicyRule
	isSet bool
}

func (v NullableSharedResourcePolicyRule) Get() *SharedResourcePolicyRule {
	return v.value
}

func (v *NullableSharedResourcePolicyRule) Set(val *SharedResourcePolicyRule) {
	v.value = val
	v.isSet = true
}

func (v NullableSharedResourcePolicyRule) IsSet() bool {
	return v.isSet
}

func (v *NullableSharedResourcePolicyRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSharedResourcePolicyRule(val *SharedResourcePolicyRule) *NullableSharedResourcePolicyRule {
	return &NullableSharedResourcePolicyRule{value: val, isSet: true}
}

func (v NullableSharedResourcePolicyRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSharedResourcePolicyRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

 
